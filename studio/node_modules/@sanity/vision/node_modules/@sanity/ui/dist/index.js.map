{"version":3,"file":"index.js","sources":["../src/core/helpers/animation.ts","../src/core/helpers/focus.ts","../src/core/hooks/useClickOutside.ts","../src/core/hooks/useElementRect/useElementRect.ts","../src/core/hooks/useForwardedRef.ts","../src/core/utils/errorBoundary.tsx","../src/core/components/autocomplete/autocomplete.styles.tsx","../src/core/components/autocomplete/autocompleteOption.tsx","../src/core/components/autocomplete/autocompleteReducer.ts","../src/core/components/autocomplete/constants.ts","../src/core/components/autocomplete/autocomplete.tsx","../src/core/components/breadcrumbs/breadcrumbs.styles.ts","../src/core/components/breadcrumbs/breadcrumbs.tsx","../src/core/components/dialog/styles.ts","../src/core/components/dialog/dialogContext.ts","../src/core/components/dialog/useDialog.ts","../src/core/components/dialog/dialog.tsx","../src/core/components/dialog/dialogProvider.tsx","../src/core/components/menu/menuButton.tsx","../src/core/components/skeleton/styles.ts","../src/core/components/skeleton/skeleton.tsx","../src/core/components/skeleton/textSkeleton.tsx","../src/core/components/tab/tabPanel.tsx","../src/core/components/toast/styles.ts","../src/core/components/toast/toast.tsx","../src/core/hooks/useMounted.ts","../src/core/components/toast/toastContext.ts","../src/core/components/toast/toastLayer.tsx","../src/core/components/toast/toastState.ts","../src/core/components/toast/toastProvider.tsx","../src/core/components/toast/useToast.ts","../src/core/components/tree/helpers.ts","../src/core/components/tree/treeContext.ts","../src/core/components/tree/tree.tsx","../src/core/components/tree/style.ts","../src/core/components/tree/useTree.ts","../src/core/components/tree/treeGroup.tsx","../src/core/components/tree/treeItem.tsx"],"sourcesContent":["/**\n * @internal\n */\nexport function _raf(fn: () => void): () => void {\n  const frameId = requestAnimationFrame(fn)\n\n  return () => {\n    cancelAnimationFrame(frameId)\n  }\n}\n\n/**\n * @internal\n */\nexport function _raf2(fn: () => void): () => void {\n  let innerDispose: (() => void) | null = null\n\n  const outerDispose = _raf(() => {\n    innerDispose = _raf(fn)\n  })\n\n  return () => {\n    if (innerDispose) innerDispose()\n\n    outerDispose()\n  }\n}\n","import {\n  isHTMLAnchorElement,\n  isHTMLButtonElement,\n  isHTMLElement,\n  isHTMLInputElement,\n  isHTMLSelectElement,\n  isHTMLTextAreaElement,\n} from './element'\n\n// export const globalFocusState = {\n//   IgnoreUtilFocusChanges: false,\n// }\n\n/**\n * @internal\n */\nexport function _hasFocus(element: HTMLElement): boolean {\n  return Boolean(document.activeElement) && element.contains(document.activeElement)\n}\n\n/**\n * @internal\n */\nexport function isFocusable(element: HTMLElement): boolean {\n  if (\n    element.tabIndex > 0 ||\n    (element.tabIndex === 0 && element.getAttribute('tabIndex') !== null)\n  ) {\n    return true\n  }\n\n  if (isHTMLAnchorElement(element)) {\n    return Boolean(element.href) && element.rel !== 'ignore'\n  }\n\n  if (isHTMLInputElement(element)) {\n    return element.type !== 'hidden' && element.type !== 'file' && !element.disabled\n  }\n\n  if (\n    isHTMLButtonElement(element) ||\n    isHTMLSelectElement(element) ||\n    isHTMLTextAreaElement(element)\n  ) {\n    return !element.disabled\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function attemptFocus(element: HTMLElement): boolean {\n  if (!isFocusable(element)) {\n    return false\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = true\n\n  try {\n    element.focus()\n  } catch {\n    // ignore\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = false\n\n  return document.activeElement === element\n}\n\n/**\n * @internal\n */\nexport function focusFirstDescendant(element: HTMLElement): boolean {\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusFirstDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function focusLastDescendant(element: HTMLElement): boolean {\n  for (let i = element.childNodes.length - 1; i >= 0; i--) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusLastDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n","import {useEffect, useRef, useState} from 'react'\n\nimport {EMPTY_ARRAY} from '../constants'\n\n/**\n * @public\n */\nexport type ClickOutsideListener = (event: MouseEvent) => void\n\n/**\n * @public\n */\nexport type ClickOutsideElements = (HTMLElement | null | (HTMLElement | null)[])[]\n\nfunction _getElements(\n  element: HTMLElement | null,\n  elementsArg: ClickOutsideElements,\n): HTMLElement[] {\n  const ret = [element]\n\n  for (const el of elementsArg) {\n    if (Array.isArray(el)) {\n      ret.push(...el)\n    } else {\n      ret.push(el)\n    }\n  }\n\n  return ret.filter(Boolean) as HTMLElement[]\n}\n\n/**\n * @public\n * @deprecated replaced by the new `useClickOutsideEvent` hook, instead of:\n * ```tsx\n * const [button, setButtonElement] = useState(null)\n * useClickOutside((event) => {}, [button])\n * return <button ref={setButtonElement} />\n * ```\n * do:\n * ```tsx\n * const buttonRef = useRef()\n * useClickOutsideEvent((event) => {}, () => [buttonRef.current])\n * return <button ref={buttonRef} />\n * ```\n */\nexport function useClickOutside(\n  listener: ClickOutsideListener,\n  elementsArg: ClickOutsideElements = EMPTY_ARRAY,\n  boundaryElement?: HTMLElement | null,\n): (el: HTMLElement | null) => void {\n  const [element, setElement] = useState<HTMLElement | null>(null)\n  const [elements, setElements] = useState(() => _getElements(element, elementsArg))\n  const elementsRef = useRef(elements)\n\n  useEffect(() => {\n    const prevElements = elementsRef.current\n    const nextElements = _getElements(element, elementsArg)\n\n    if (prevElements.length !== nextElements.length) {\n      setElements(nextElements)\n      elementsRef.current = nextElements\n\n      return\n    }\n\n    for (const el of prevElements) {\n      if (!nextElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n\n    for (const el of nextElements) {\n      if (!prevElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n  }, [element, elementsArg])\n\n  useEffect(() => {\n    if (!listener) return undefined\n\n    const handleWindowMouseDown = (evt: MouseEvent) => {\n      const target = evt.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (boundaryElement && !boundaryElement.contains(target)) {\n        return\n      }\n\n      for (const el of elements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      listener(evt)\n    }\n\n    window.addEventListener('mousedown', handleWindowMouseDown)\n\n    return () => {\n      window.removeEventListener('mousedown', handleWindowMouseDown)\n    }\n  }, [boundaryElement, listener, elements])\n\n  return setElement\n}\n","import {useElementSize} from '../useElementSize'\n\n/**\n * Subscribe to the rect of a DOM element.\n * @beta\n *\n * @deprecated Use `useElementSize` instead\n */\nexport function useElementRect(element: HTMLElement | null): DOMRectReadOnly | null {\n  const elementSize = useElementSize(element)\n\n  return elementSize?._contentRect || null\n}\n","import {useImperativeHandle, useRef} from 'react'\n\n/**\n * @beta\n * @deprecated use `useImperativeHandle` instead\n * @example\n * ```diff\n * -const ref = useForwardedRef(forwardedRef)\n * +const ref = useRef(null)\n * +useImperativeHandle(forwardedRef, () => ref.current)\n * ```\n */\nexport function useForwardedRef<T>(ref: React.ForwardedRef<T>): React.MutableRefObject<T | null> {\n  const innerRef = useRef<T | null>(null)\n\n  useImperativeHandle(ref, () => innerRef.current!)\n\n  return innerRef\n}\n","import {Component, PropsWithChildren} from 'react'\n\nimport {Code} from '../primitives/code'\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport type ErrorBoundaryProps = PropsWithChildren<{\n  onCatch: (params: {error: Error; info: React.ErrorInfo}) => void\n}>\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport interface ErrorBoundaryState {\n  error: Error | null\n}\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  state: ErrorBoundaryState = {error: null}\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI.\n    return {error}\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo): void {\n    this.props.onCatch({error, info})\n  }\n\n  render(): React.ReactNode {\n    const {error} = this.state\n\n    if (error) {\n      const message = typeof error?.message === 'string' ? error.message : 'Error'\n\n      return <Code>{message}</Code>\n    }\n\n    return this.props.children\n  }\n}\n","import {SpinnerIcon} from '@sanity/icons'\nimport {keyframes, styled} from 'styled-components'\n\nimport {Box} from '../../primitives'\n\n/**\n * @internal\n */\nexport const StyledAutocomplete = styled.div`\n  line-height: 0;\n`\n\n/**\n * @internal\n */\nexport const ListBox = styled(Box)`\n  & > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\n/**\n * @internal\n */\nexport const AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n","import {useCallback} from 'react'\n\nimport {_isEnterToClickElement} from '../../helpers'\n\nexport interface AutocompleteOptionProps {\n  children: React.ReactNode\n  id: string\n  onSelect: (v: string) => void\n  selected: boolean\n  value: string\n}\n\nexport function AutocompleteOption(props: AutocompleteOptionProps): React.JSX.Element {\n  const {children, id, onSelect, selected, value} = props\n\n  const handleClick = useCallback(() => {\n    // Calling the `onSelect` in a timeout is a fix to\n    // allow the `click` event to propagate in some cases\n    setTimeout(() => {\n      onSelect(value)\n    }, 0)\n  }, [onSelect, value])\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLLIElement>) => {\n      if (event.key === 'Enter' && !_isEnterToClickElement(event.currentTarget)) {\n        handleClick()\n      }\n    },\n    [handleClick],\n  )\n\n  return (\n    <li\n      aria-selected={selected}\n      data-ui=\"AutocompleteOption\"\n      id={id}\n      role=\"option\"\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n    >\n      {children}\n    </li>\n  )\n}\n","import {AutocompleteMsg, AutocompleteState} from './types'\n\n/**\n * @internal\n */\nexport function autocompleteReducer(\n  state: AutocompleteState,\n  msg: AutocompleteMsg,\n): AutocompleteState {\n  if (msg.type === 'input/change') {\n    return {...state, activeValue: null, focused: true, query: msg.query}\n  }\n\n  if (msg.type === 'input/focus') {\n    return {...state, focused: true}\n  }\n\n  if (msg.type === 'root/blur') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/clear') {\n    return {...state, activeValue: null, query: null, value: null}\n  }\n\n  if (msg.type === 'root/escape') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/open') {\n    return {...state, query: state.query || msg.query}\n  }\n\n  if (msg.type === 'root/setActiveValue') {\n    return {...state, activeValue: msg.value, listFocused: msg.listFocused || state.listFocused}\n  }\n\n  if (msg.type === 'root/setListFocused') {\n    return {...state, listFocused: msg.listFocused}\n  }\n\n  if (msg.type === 'value/change') {\n    return {...state, activeValue: msg.value, query: null, value: msg.value}\n  }\n\n  return state\n}\n","import {Placement} from '../../types'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_LISTBOX_IGNORE_KEYS = [\n  'Control',\n  'Shift',\n  'Alt',\n  'Enter',\n  'Home',\n  'End',\n  'PageUp',\n  'PageDown',\n  'Meta',\n  'Tab',\n  'CapsLock',\n]\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_PLACEMENT: Placement = 'bottom-start'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['bottom-start', 'top-start']\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  ChangeEvent,\n  cloneElement,\n  ElementType,\n  FocusEvent,\n  forwardRef,\n  HTMLProps,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\n\nimport {EMPTY_ARRAY, EMPTY_RECORD} from '../../constants'\nimport {_hasFocus, _raf, focusFirstDescendant} from '../../helpers'\nimport {useArrayProp} from '../../hooks'\nimport {\n  Box,\n  BoxProps,\n  Button,\n  Card,\n  Popover,\n  PopoverProps,\n  Stack,\n  Text,\n  TextInput,\n} from '../../primitives'\nimport {Radius} from '../../types'\nimport {AnimatedSpinnerIcon, ListBox, StyledAutocomplete} from './autocomplete.styles'\nimport {AutocompleteOption} from './autocompleteOption'\nimport {autocompleteReducer} from './autocompleteReducer'\nimport {\n  AUTOCOMPLETE_LISTBOX_IGNORE_KEYS,\n  AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS,\n  AUTOCOMPLETE_POPOVER_PLACEMENT,\n} from './constants'\nimport {AutocompleteOpenButtonProps, BaseAutocompleteOption} from './types'\n\n/**\n * @public\n */\nexport interface AutocompleteProps<Option extends BaseAutocompleteOption = BaseAutocompleteOption> {\n  border?: boolean\n  customValidity?: string\n  filterOption?: (query: string, option: Option) => boolean\n  fontSize?: number | number[]\n  icon?: ElementType | ReactNode\n  id: string\n  /** @beta */\n  listBox?: BoxProps\n  loading?: boolean\n  onChange?: (value: string) => void\n  onQueryChange?: (query: string | null) => void\n  onSelect?: (value: string) => void\n  /** @beta */\n  openButton?: boolean | AutocompleteOpenButtonProps\n  /** @beta */\n  openOnFocus?: boolean\n  /** The options to render. */\n  options?: Option[]\n  padding?: number | number[]\n  popover?: Omit<PopoverProps, 'content' | 'onMouseEnter' | 'onMouseLeave' | 'open'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'ref' | 'width'>\n  prefix?: ReactNode\n  radius?: Radius | Radius[]\n  /** @beta */\n  relatedElements?: HTMLElement[]\n  /** The callback function for rendering each option. */\n  renderOption?: (option: Option) => React.JSX.Element\n  /** @beta */\n  renderPopover?: (\n    props: {\n      content: React.JSX.Element | null\n      hidden: boolean\n      inputElement: HTMLInputElement | null\n      onMouseEnter: () => void\n      onMouseLeave: () => void\n    },\n    ref: Ref<HTMLDivElement>,\n  ) => ReactNode\n  renderValue?: (value: string, option?: Option) => string\n  suffix?: ReactNode\n  /** The current value. */\n  value?: string\n}\n\nconst DEFAULT_RENDER_VALUE = (value: string, option?: BaseAutocompleteOption) =>\n  option ? option.value : value\n\nconst DEFAULT_FILTER_OPTION = (query: string, option: BaseAutocompleteOption) =>\n  option.value.toLowerCase().indexOf(query.toLowerCase()) > -1\n\nconst InnerAutocomplete = forwardRef(function InnerAutocomplete<\n  Option extends BaseAutocompleteOption,\n>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    >,\n  forwardedRef: React.ForwardedRef<HTMLInputElement>,\n) {\n  const {\n    border = true,\n    customValidity,\n    disabled,\n    filterOption: filterOptionProp,\n    fontSize = 2,\n    icon,\n    id,\n    listBox = EMPTY_RECORD,\n    loading,\n    onBlur,\n    onChange,\n    onFocus,\n    onQueryChange,\n    onSelect,\n    openButton,\n    openOnFocus,\n    options: optionsProp,\n    padding: paddingProp = 3,\n    popover = EMPTY_RECORD,\n    prefix,\n    radius = 2,\n    readOnly,\n    relatedElements,\n    renderOption: renderOptionProp,\n    renderPopover,\n    renderValue = DEFAULT_RENDER_VALUE,\n    suffix,\n    value: valueProp,\n    ...restProps\n  } = props\n\n  const [state, dispatch] = useReducer(autocompleteReducer, {\n    activeValue: valueProp || null,\n    focused: false,\n    listFocused: false,\n    query: null,\n    value: valueProp || null,\n  })\n\n  const {activeValue, focused, listFocused, query, value} = state\n\n  const defaultRenderOption = useCallback(\n    ({value}: BaseAutocompleteOption) => (\n      <Card data-as=\"button\" padding={paddingProp} radius={2} tone=\"inherit\">\n        <Text size={fontSize} textOverflow=\"ellipsis\">\n          {value}\n        </Text>\n      </Card>\n    ),\n    [fontSize, paddingProp],\n  )\n\n  const renderOption =\n    typeof renderOptionProp === 'function' ? renderOptionProp : defaultRenderOption\n\n  const filterOption =\n    typeof filterOptionProp === 'function' ? filterOptionProp : DEFAULT_FILTER_OPTION\n\n  // Element refs\n  const rootElementRef = useRef<HTMLDivElement | null>(null)\n  const resultsPopoverElementRef = useRef<HTMLDivElement | null>(null)\n  const inputElementRef = useRef<HTMLInputElement | null>(null)\n  const listBoxElementRef = useRef<HTMLDivElement | null>(null)\n  // Element refs that need to be accessed during render\n  const [inputElement, setInputElement] = useState<HTMLInputElement | null>(null)\n\n  // Value refs\n  const listFocusedRef = useRef(false)\n  const valueRef = useRef(value)\n  const valuePropRef = useRef(valueProp)\n  const popoverMouseWithinRef = useRef(false)\n\n  // Forward inputElement state to inputElementRef\n  useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(\n    inputElementRef,\n    () => inputElement,\n    [inputElement],\n  )\n  // Forward inputElement to parent\n  useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(\n    forwardedRef,\n    () => inputElement,\n    [inputElement],\n  )\n\n  const listBoxId = `${id}-listbox`\n  const options = Array.isArray(optionsProp) ? optionsProp : EMPTY_ARRAY\n  const padding = useArrayProp(paddingProp)\n  const currentOption = useMemo(\n    () => (value !== null ? options.find((o) => o.value === value) : undefined),\n    [options, value],\n  )\n  const filteredOptions = useMemo(\n    () => options.filter((option) => (query ? filterOption(query, option) : true)),\n    [filterOption, options, query],\n  )\n  const filteredOptionsLen = filteredOptions.length\n  const activeItemId = activeValue ? `${id}-option-${activeValue}` : undefined\n  const expanded = (query !== null && loading) || (focused && query !== null)\n\n  const handleRootBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      setTimeout(() => {\n        // NOTE: This is a workaround for a bug that may happen in Chrome (clicking the scrollbar\n        // closes the results in certain situations):\n        // - Do not handle blur if the mouse is within the popover\n        if (popoverMouseWithinRef.current) {\n          return\n        }\n\n        const elements: HTMLElement[] = (relatedElements || []).concat(\n          rootElementRef.current ? [rootElementRef.current] : [],\n          resultsPopoverElementRef.current ? [resultsPopoverElementRef.current] : [],\n        )\n\n        let focusInside = false\n\n        if (document.activeElement) {\n          for (const e of elements) {\n            if (e === document.activeElement || e.contains(document.activeElement)) {\n              focusInside = true\n              break\n            }\n          }\n        }\n\n        if (focusInside === false) {\n          dispatch({type: 'root/blur'})\n          popoverMouseWithinRef.current = false\n          if (onQueryChange) onQueryChange(null)\n          if (onBlur) onBlur(event)\n        }\n      }, 0)\n    },\n    [onBlur, onQueryChange, relatedElements],\n  )\n\n  const handleRootFocus = useCallback((event: FocusEvent<HTMLDivElement>) => {\n    const listBoxElement = listBoxElementRef.current\n    const focusedElement = event.target instanceof HTMLElement ? event.target : null\n    const listFocused = listBoxElement?.contains(focusedElement) || false\n\n    if (listFocused !== listFocusedRef.current) {\n      listFocusedRef.current = listFocused\n\n      dispatch({type: 'root/setListFocused', listFocused})\n    }\n  }, [])\n\n  const handleOptionSelect = useCallback(\n    (v: string) => {\n      dispatch({type: 'value/change', value: v})\n\n      popoverMouseWithinRef.current = false\n\n      if (onSelect) onSelect(v)\n\n      valueRef.current = v\n\n      if (onChange) onChange(v)\n      if (onQueryChange) onQueryChange(null)\n\n      inputElementRef.current?.focus()\n    },\n    [onChange, onSelect, onQueryChange],\n  )\n\n  const handleRootKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLElement>) => {\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption = filteredOptions[(activeIndex + 1) % filteredOptionsLen]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'ArrowUp') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption =\n          filteredOptions[\n            activeIndex === -1\n              ? filteredOptionsLen - 1\n              : (filteredOptionsLen + activeIndex - 1) % filteredOptionsLen\n          ]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'Escape') {\n        dispatch({type: 'root/escape'})\n        popoverMouseWithinRef.current = false\n        if (onQueryChange) onQueryChange(null)\n        inputElementRef.current?.focus()\n\n        return\n      }\n\n      const target = event.target as Node\n      const listEl = listBoxElementRef.current\n\n      if (\n        (listEl === target || listEl?.contains(target)) &&\n        !AUTOCOMPLETE_LISTBOX_IGNORE_KEYS.includes(event.key)\n      ) {\n        inputElementRef.current?.focus()\n\n        return\n      }\n    },\n    [activeValue, filteredOptions, filteredOptionsLen, onQueryChange],\n  )\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const nextQuery = event.currentTarget.value\n\n      dispatch({type: 'input/change', query: nextQuery})\n\n      if (onQueryChange) onQueryChange(nextQuery)\n    },\n    [onQueryChange],\n  )\n\n  const dispatchOpen = useCallback(() => {\n    dispatch({\n      type: 'root/open',\n      query: value ? renderValue(value, currentOption) : '',\n    })\n  }, [currentOption, renderValue, value])\n\n  const handleInputFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      if (!focused) {\n        dispatch({type: 'input/focus'})\n\n        if (onFocus) onFocus(event)\n        if (openOnFocus) dispatchOpen()\n      }\n    },\n    [focused, onFocus, openOnFocus, dispatchOpen],\n  )\n\n  const handlePopoverMouseEnter = useCallback(() => {\n    popoverMouseWithinRef.current = true\n  }, [])\n\n  const handlePopoverMouseLeave = useCallback(() => {\n    popoverMouseWithinRef.current = false\n  }, [])\n\n  const handleClearButtonClick = useCallback(() => {\n    dispatch({type: 'root/clear'})\n    valueRef.current = ''\n    if (onChange) onChange('')\n    if (onQueryChange) onQueryChange(null)\n    inputElementRef.current?.focus()\n  }, [onChange, onQueryChange])\n\n  const handleClearButtonFocus = useCallback(() => {\n    dispatch({type: 'input/focus'})\n  }, [])\n\n  // Change the value when `value` prop changes\n  useEffect(() => {\n    // If `valueProp` changed\n    if (valueProp !== valuePropRef.current) {\n      valuePropRef.current = valueProp\n\n      if (valueProp !== undefined) {\n        dispatch({type: 'value/change', value: valueProp})\n        valueRef.current = valueProp\n      }\n\n      return\n    }\n\n    // If `valueProp` is not equal to `value`\n    if (valueProp !== valueRef.current) {\n      valueRef.current = valueProp || null\n\n      dispatch({type: 'value/change', value: valueProp || null})\n    }\n  }, [valueProp])\n\n  // Reset active item when closing\n  useEffect(() => {\n    if (!focused && valueRef.current) {\n      dispatch({type: 'root/setActiveValue', value: valueRef.current})\n    }\n  }, [focused])\n\n  // Focus the selected item\n  useEffect(() => {\n    const listElement = listBoxElementRef.current\n\n    if (!listElement) return\n\n    const activeOption = filteredOptions.find((o) => o.value === activeValue)\n\n    if (activeOption) {\n      const activeIndex = filteredOptions.indexOf(activeOption)\n      const activeItemElement = listElement.childNodes[activeIndex] as HTMLLIElement | undefined\n\n      if (activeItemElement) {\n        if (_hasFocus(activeItemElement)) {\n          // already focused\n          return\n        }\n\n        focusFirstDescendant(activeItemElement)\n      }\n    }\n  }, [activeValue, filteredOptions])\n\n  const clearButton = useMemo(() => {\n    if (!loading && !disabled && value) {\n      return {\n        'aria-label': 'Clear',\n        'onFocus': handleClearButtonFocus,\n      }\n    }\n\n    return undefined\n  }, [disabled, handleClearButtonFocus, loading, value])\n\n  const openButtonBoxPadding = useMemo(\n    () =>\n      padding.map((v) => {\n        if (v === 0) return 0\n        if (v === 1) return 1\n        if (v === 2) return 1\n\n        return v - 2\n      }),\n    [padding],\n  )\n  const openButtonPadding = useMemo(() => padding.map((v) => Math.max(v - 1, 0)), [padding])\n  const openButtonProps: AutocompleteOpenButtonProps = useMemo(\n    () => (typeof openButton === 'object' ? openButton : EMPTY_RECORD),\n    [openButton],\n  )\n\n  const handleOpenClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      dispatchOpen()\n\n      if (openButtonProps.onClick) openButtonProps.onClick(event)\n\n      _raf(() => inputElementRef.current?.focus())\n    },\n    [openButtonProps, dispatchOpen],\n  )\n\n  const openButtonNode = useMemo(\n    () =>\n      !disabled && !readOnly && openButton ? (\n        <Box aria-hidden={expanded} padding={openButtonBoxPadding}>\n          <Button\n            aria-label=\"Open\"\n            disabled={expanded}\n            fontSize={fontSize}\n            icon={ChevronDownIcon}\n            mode=\"bleed\"\n            padding={openButtonPadding}\n            {...openButtonProps}\n            onClick={handleOpenClick}\n          />\n        </Box>\n      ) : undefined,\n    [\n      disabled,\n      expanded,\n      fontSize,\n      handleOpenClick,\n      openButton,\n      openButtonBoxPadding,\n      openButtonPadding,\n      openButtonProps,\n      readOnly,\n    ],\n  )\n\n  const inputValue = useMemo(() => {\n    if (query === null) {\n      if (value !== null) {\n        return renderValue(value, currentOption)\n      }\n\n      return ''\n    }\n\n    return query\n  }, [currentOption, query, renderValue, value])\n\n  const handleListBoxKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>) => {\n      // If the focus is currently in the list, move focus to the input element\n      if (event.key === 'Tab') {\n        if (listFocused) inputElementRef.current?.focus()\n      }\n    },\n    [listFocused],\n  )\n\n  const content = useMemo(() => {\n    if (filteredOptions.length === 0) return null\n\n    return (\n      <ListBox\n        data-ui=\"AutoComplete__results\"\n        onKeyDown={handleListBoxKeyDown}\n        padding={1}\n        {...listBox}\n        tabIndex={-1}\n      >\n        <Stack\n          as=\"ul\"\n          aria-multiselectable={false}\n          data-ui=\"AutoComplete__resultsList\"\n          id={listBoxId}\n          ref={listBoxElementRef}\n          role=\"listbox\"\n          space={1}\n        >\n          {filteredOptions.map((option) => {\n            const active =\n              activeValue !== null ? option.value === activeValue : currentOption === option\n\n            return (\n              <AutocompleteOption\n                id={`${id}-option-${option.value}`}\n                key={option.value}\n                onSelect={handleOptionSelect}\n                selected={active}\n                value={option.value}\n              >\n                {cloneElement(renderOption(option), {\n                  disabled: loading,\n                  selected: active,\n                  tabIndex: listFocused && active ? 0 : -1,\n                })}\n              </AutocompleteOption>\n            )\n          })}\n        </Stack>\n      </ListBox>\n    )\n  }, [\n    activeValue,\n    currentOption,\n    filteredOptions,\n    handleOptionSelect,\n    handleListBoxKeyDown,\n    id,\n    listBox,\n    listBoxId,\n    listFocused,\n    loading,\n    renderOption,\n  ])\n\n  const results = useMemo(() => {\n    if (renderPopover) {\n      return (\n        <RenderPopover\n          content={content}\n          hidden={!expanded}\n          inputElement={inputElement}\n          onMouseEnter={handlePopoverMouseEnter}\n          onMouseLeave={handlePopoverMouseLeave}\n          resultsPopoverElementRef={resultsPopoverElementRef}\n          renderPopover={renderPopover}\n        />\n      )\n    }\n\n    if (filteredOptionsLen === 0) {\n      return null\n    }\n\n    return (\n      <Popover\n        arrow={false}\n        constrainSize\n        content={content}\n        fallbackPlacements={AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS}\n        matchReferenceWidth\n        onMouseEnter={handlePopoverMouseEnter}\n        onMouseLeave={handlePopoverMouseLeave}\n        open={expanded}\n        overflow=\"auto\"\n        placement={AUTOCOMPLETE_POPOVER_PLACEMENT}\n        portal\n        radius={radius}\n        ref={resultsPopoverElementRef}\n        referenceElement={inputElement}\n        {...popover}\n      />\n    )\n  }, [\n    content,\n    expanded,\n    filteredOptionsLen,\n    handlePopoverMouseEnter,\n    handlePopoverMouseLeave,\n    inputElement,\n    popover,\n    radius,\n    renderPopover,\n  ])\n\n  return (\n    <StyledAutocomplete\n      data-ui=\"Autocomplete\"\n      onBlur={handleRootBlur}\n      onFocus={handleRootFocus}\n      onKeyDown={handleRootKeyDown}\n      ref={rootElementRef}\n    >\n      <TextInput\n        {...restProps}\n        aria-activedescendant={activeItemId}\n        aria-autocomplete=\"list\"\n        aria-expanded={expanded}\n        aria-owns={listBoxId}\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        border={border}\n        clearButton={clearButton}\n        customValidity={customValidity}\n        disabled={disabled}\n        fontSize={fontSize}\n        icon={icon}\n        iconRight={loading && AnimatedSpinnerIcon}\n        id={id}\n        inputMode=\"search\"\n        onChange={handleInputChange}\n        onClear={handleClearButtonClick}\n        onFocus={handleInputFocus}\n        padding={padding}\n        prefix={prefix}\n        radius={radius}\n        readOnly={readOnly}\n        ref={setInputElement}\n        role=\"combobox\"\n        spellCheck={false}\n        suffix={suffix || openButtonNode}\n        value={inputValue}\n      />\n      {results}\n    </StyledAutocomplete>\n  )\n})\n\nfunction RenderPopover({\n  renderPopover,\n  content,\n  hidden,\n  inputElement,\n  onMouseEnter,\n  onMouseLeave,\n  resultsPopoverElementRef,\n}: {\n  renderPopover: Exclude<AutocompleteProps['renderPopover'], undefined>\n  resultsPopoverElementRef: Parameters<Exclude<AutocompleteProps['renderPopover'], undefined>>[1]\n} & Parameters<Exclude<AutocompleteProps['renderPopover'], undefined>>[0]) {\n  return renderPopover(\n    {\n      content,\n      hidden,\n      inputElement,\n      onMouseEnter,\n      onMouseLeave,\n    },\n    resultsPopoverElementRef,\n  )\n}\n\nInnerAutocomplete.displayName = 'ForwardRef(Autocomplete)'\n\n/**\n * The Autocomplete component is typically used for search components.\n * It consists of a text input for writing a query, and properties for rendering suggestions.\n *\n * @public\n */\nexport const Autocomplete = InnerAutocomplete as <Option extends BaseAutocompleteOption>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    > & {\n      ref?: Ref<HTMLInputElement>\n    },\n) => React.JSX.Element\n","import {styled} from 'styled-components'\n\nimport {Button} from '../../primitives'\n\nexport const StyledBreadcrumbs = styled.ol`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  list-style: none;\n  align-items: center;\n  white-space: nowrap;\n  line-height: 0;\n`\n\nexport const ExpandButton = styled(Button)`\n  appearance: none;\n  margin: -4px;\n`\n","import {\n  Children,\n  forwardRef,\n  Fragment,\n  isValidElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {useArrayProp, useClickOutsideEvent} from '../../hooks'\nimport {Box, Popover, Stack, Text} from '../../primitives'\nimport {ExpandButton, StyledBreadcrumbs} from './breadcrumbs.styles'\n\n/**\n * @beta\n */\nexport interface BreadcrumbsProps {\n  maxLength?: number\n  separator?: React.ReactNode\n  space?: number | number[]\n}\n\n/**\n * @beta\n */\nexport const Breadcrumbs = forwardRef(function Breadcrumbs(\n  props: BreadcrumbsProps & Omit<React.HTMLProps<HTMLOListElement>, 'as' | 'ref' | 'type'>,\n  ref: React.ForwardedRef<HTMLOListElement>,\n) {\n  const {children, maxLength, separator, space: spaceRaw = 2, ...restProps} = props\n  const space = useArrayProp(spaceRaw)\n  const [open, setOpen] = useState(false)\n  const expandElementRef = useRef<HTMLButtonElement | null>(null)\n  const popoverElementRef = useRef<HTMLDivElement | null>(null)\n\n  const collapse = useCallback(() => setOpen(false), [])\n  const expand = useCallback(() => setOpen(true), [])\n\n  useClickOutsideEvent(collapse, () => [expandElementRef.current, popoverElementRef.current])\n\n  const rawItems = useMemo(() => Children.toArray(children).filter(isValidElement), [children])\n\n  const items = useMemo(() => {\n    const len = rawItems.length\n\n    if (maxLength && len > maxLength) {\n      const beforeLength = Math.ceil(maxLength / 2)\n      const afterLength = Math.floor(maxLength / 2)\n\n      return [\n        ...rawItems.slice(0, beforeLength - 1),\n        <Popover\n          constrainSize\n          content={\n            <Stack as=\"ol\" overflow=\"auto\" padding={space} space={space}>\n              {rawItems.slice(beforeLength - 1, len - afterLength)}\n            </Stack>\n          }\n          key=\"button\"\n          open={open}\n          placement=\"top\"\n          portal\n          ref={popoverElementRef}\n        >\n          <ExpandButton\n            fontSize={1}\n            mode=\"bleed\"\n            onClick={open ? collapse : expand}\n            padding={1}\n            ref={expandElementRef}\n            selected={open}\n            text=\"…\"\n          />\n        </Popover>,\n        ...rawItems.slice(len - afterLength),\n      ]\n    }\n\n    return rawItems\n  }, [collapse, expand, maxLength, open, rawItems, space])\n\n  return (\n    <StyledBreadcrumbs data-ui=\"Breadcrumbs\" {...restProps} ref={ref}>\n      {items.map((item, itemIndex) => (\n        <Fragment key={itemIndex}>\n          {itemIndex > 0 && (\n            <Box aria-hidden as=\"li\" paddingX={space}>\n              {separator || <Text muted>/</Text>}\n            </Box>\n          )}\n          <Box as=\"li\">{item}</Box>\n        </Fragment>\n      ))}\n    </StyledBreadcrumbs>\n  )\n})\nBreadcrumbs.displayName = 'ForwardRef(Breadcrumbs)'\n","import {CSSObject, getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {_responsive, ThemeProps} from '../../styles'\nimport {DialogPosition} from '../../types'\n\n/**\n * @internal\n */\nexport interface ResponsiveDialogPositionStyleProps {\n  $position: DialogPosition[]\n}\n\nexport function dialogStyle({theme}: ThemeProps): CSSObject {\n  const {color} = getTheme_v2(theme)\n\n  return {\n    '&:not([hidden])': {\n      display: 'flex',\n    },\n\n    'top': 0,\n    'left': 0,\n    'right': 0,\n    'bottom': 0,\n    'alignItems': 'center',\n    'justifyContent': 'center',\n    'outline': 'none',\n    'background': color.backdrop,\n  }\n}\n\nexport function responsiveDialogPositionStyle(\n  props: ResponsiveDialogPositionStyleProps & ThemeProps,\n): CSSObject[] {\n  const {media} = getTheme_v2(props.theme)\n\n  return _responsive(media, props.$position, (position) => ({'&&': {position}}))\n}\n\n/**\n * @internal\n */\nexport interface AnimationDialogStyleProps {\n  $animate: boolean\n}\n\nexport function animationDialogStyle(props: AnimationDialogStyleProps): ReturnType<typeof css> {\n  if (!props.$animate) return css``\n\n  return css`\n    @keyframes zoomIn {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    animation: fadeIn 200ms ease-out;\n    // Animates the dialog card.\n    & > [data-ui='DialogCard'] {\n      animation: zoomIn 200ms ease-out;\n    }\n  `\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {DialogPosition} from '../../types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogContextValue {\n  version: 0.0\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * @internal\n */\nexport const DialogContext = createGlobalScopedContext<DialogContextValue>(\n  '@sanity/ui/context/dialog',\n  {version: 0.0},\n)\n","import {useContext} from 'react'\n\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function useDialog(): DialogContextValue {\n  return useContext(DialogContext)\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {forwardRef, useCallback, useEffect, useImperativeHandle, useRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {\n  containsOrEqualsElement,\n  focusFirstDescendant,\n  focusLastDescendant,\n  isHTMLElement,\n} from '../../helpers'\nimport {\n  useArrayProp,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  usePrefersReducedMotion,\n} from '../../hooks'\nimport {Box, Button, Card, Container, Flex, Text} from '../../primitives'\nimport {ResponsivePaddingProps, ResponsiveWidthProps} from '../../primitives/types'\nimport {responsivePaddingStyle, ResponsivePaddingStyleProps} from '../../styles/internal'\nimport {useTheme_v2} from '../../theme'\nimport {DialogPosition, Radius} from '../../types'\nimport {Layer, LayerProps, Portal, useBoundaryElement, useLayer, usePortal} from '../../utils'\nimport {\n  animationDialogStyle,\n  AnimationDialogStyleProps,\n  dialogStyle,\n  responsiveDialogPositionStyle,\n  ResponsiveDialogPositionStyleProps,\n} from './styles'\nimport {useDialog} from './useDialog'\n\n/**\n * @public\n */\nexport interface DialogProps extends ResponsivePaddingProps, ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus?: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton?: boolean\n  cardRadius?: Radius | Radius[]\n  cardShadow?: number | number[]\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer?: React.ReactNode\n  header?: React.ReactNode\n  id: string\n  /** A callback that fires when the dialog becomes the top layer when it was not the top layer before. */\n  onActivate?: LayerProps['onActivate']\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  position?: DialogPosition | DialogPosition[]\n  scheme?: ThemeColorSchemeKey\n  zOffset?: number | number[]\n  /**\n   * Whether the dialog should animate in on mount.\n   *\n   * @beta\n   * @defaultValue false\n   */\n  animate?: boolean\n}\n\ninterface DialogCardProps extends ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton: boolean\n  children: React.ReactNode\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer: React.ReactNode\n  header: React.ReactNode\n  id: string\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  radius: Radius | Radius[]\n  scheme?: ThemeColorSchemeKey\n  shadow: number | number[]\n}\n\nfunction isTargetWithinScope(\n  boundaryElement: HTMLElement | null,\n  portalElement: HTMLElement | null,\n  target: Node,\n): boolean {\n  if (!boundaryElement || !portalElement) return true\n\n  return (\n    containsOrEqualsElement(boundaryElement, target) ||\n    containsOrEqualsElement(portalElement, target)\n  )\n}\n\nconst StyledDialog = styled(Layer)<\n  ResponsiveDialogPositionStyleProps & ResponsivePaddingStyleProps & AnimationDialogStyleProps\n>(responsivePaddingStyle, dialogStyle, responsiveDialogPositionStyle, animationDialogStyle)\n\nconst DialogContainer = styled(Container)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst DialogCardRoot = styled(Card)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  min-height: 0;\n  max-height: 100%;\n  overflow: hidden;\n  overflow: clip;\n`\n\nconst DialogLayout = styled(Flex)`\n  flex: 1;\n  min-height: 0;\n  width: 100%;\n`\n\nconst DialogHeader = styled(Box)`\n  position: relative;\n  z-index: 2;\n`\n\nconst DialogContent = styled(Box)`\n  position: relative;\n  z-index: 1;\n  overflow: auto;\n  outline: none;\n`\n\nconst DialogFooter = styled(Box)`\n  position: relative;\n  z-index: 3;\n`\n\nconst DialogCard = forwardRef(function DialogCard(\n  props: DialogCardProps,\n  forwardedRef: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    __unstable_autoFocus: autoFocus,\n    __unstable_hideCloseButton: hideCloseButton,\n    children,\n    contentRef: forwardedContentRef,\n    footer,\n    header,\n    id,\n    onClickOutside,\n    onClose,\n    portal: portalProp,\n    radius: radiusProp,\n    scheme,\n    shadow: shadowProp,\n    width: widthProp,\n  } = props\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const radius = useArrayProp(radiusProp)\n  const shadow = useArrayProp(shadowProp)\n  const width = useArrayProp(widthProp)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const contentRef = useRef<HTMLDivElement | null>(null)\n  const layer = useLayer()\n  const {isTopLayer} = layer\n  const labelId = `${id}_label`\n  const showCloseButton = Boolean(onClose) && hideCloseButton === false\n  const showHeader = Boolean(header) || showCloseButton\n\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n    forwardedContentRef,\n    () => contentRef.current,\n  )\n\n  useEffect(() => {\n    if (!autoFocus) return\n\n    // On mount: focus the first focusable element\n    if (ref.current) {\n      focusFirstDescendant(ref.current)\n    }\n  }, [autoFocus, ref])\n\n  useGlobalKeyDown(\n    useCallback(\n      (event: KeyboardEvent) => {\n        if (!isTopLayer || !onClose) return\n\n        const target = document.activeElement\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore key presses when the focused element is outside of scope\n          return\n        }\n\n        if (event.key === 'Escape') {\n          event.preventDefault()\n          event.stopPropagation()\n          onClose()\n        }\n      },\n      [boundaryElement, isTopLayer, onClose, portalElement],\n    ),\n  )\n\n  useClickOutsideEvent(\n    isTopLayer &&\n      onClickOutside &&\n      ((event) => {\n        const target = event.target as Node | null\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore clicks outside of the scope\n          return\n        }\n\n        onClickOutside()\n      }),\n    () => [ref.current],\n  )\n\n  return (\n    <DialogContainer data-ui=\"DialogCard\" width={width}>\n      <DialogCardRoot radius={radius} ref={ref} scheme={scheme} shadow={shadow}>\n        <DialogLayout direction=\"column\">\n          {showHeader && (\n            <DialogHeader>\n              <Flex align=\"flex-start\" padding={3}>\n                <Box flex={1} padding={2}>\n                  {header && (\n                    <Text id={labelId} size={1} weight=\"semibold\">\n                      {header}\n                    </Text>\n                  )}\n                </Box>\n                {showCloseButton && (\n                  <Box flex=\"none\">\n                    <Button\n                      aria-label=\"Close dialog\"\n                      disabled={!onClose}\n                      icon={CloseIcon}\n                      mode=\"bleed\"\n                      onClick={onClose}\n                      padding={2}\n                    />\n                  </Box>\n                )}\n              </Flex>\n            </DialogHeader>\n          )}\n\n          <DialogContent flex={1} ref={contentRef} tabIndex={-1}>\n            {children}\n          </DialogContent>\n\n          {footer && <DialogFooter>{footer}</DialogFooter>}\n        </DialogLayout>\n      </DialogCardRoot>\n    </DialogContainer>\n  )\n})\n\nDialogCard.displayName = 'ForwardRef(DialogCard)'\n\n/**\n * The Dialog component.\n *\n * @public\n */\nexport const Dialog = forwardRef(function Dialog(\n  props: DialogProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'id' | 'width'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const dialog = useDialog()\n  const {layer} = useTheme_v2()\n  const {\n    __unstable_autoFocus: autoFocus = true,\n    __unstable_hideCloseButton: hideCloseButton = false,\n    cardRadius: cardRadiusProp = 4,\n    cardShadow = 3,\n    children,\n    contentRef,\n    footer,\n    header,\n    id,\n    onActivate,\n    onClickOutside,\n    onClose,\n    onFocus,\n    padding: paddingProp = 3,\n    portal: portalProp,\n    position: _positionProp,\n    scheme,\n    width: widthProp = 0,\n    zOffset: _zOffsetProp,\n    animate: _animate = false,\n    ...restProps\n  } = props\n  const positionProp = _positionProp ?? (dialog.position || 'fixed')\n  const zOffsetProp = _zOffsetProp ?? (dialog.zOffset || layer.dialog.zOffset)\n  const prefersReducedMotion = usePrefersReducedMotion()\n  const animate = prefersReducedMotion ? false : _animate\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const cardRadius = useArrayProp(cardRadiusProp)\n  const padding = useArrayProp(paddingProp)\n  const position = useArrayProp(positionProp)\n  const width = useArrayProp(widthProp)\n  const zOffset = useArrayProp(zOffsetProp)\n  const preDivRef = useRef<HTMLDivElement | null>(null)\n  const postDivRef = useRef<HTMLDivElement | null>(null)\n  const cardRef = useRef<HTMLDivElement | null>(null)\n  const focusedElementRef = useRef<HTMLElement | null>(null)\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLDivElement>) => {\n      onFocus?.(event)\n\n      const target = event.target\n      const cardElement = cardRef.current\n\n      if (cardElement && target === preDivRef.current) {\n        focusLastDescendant(cardElement)\n\n        return\n      }\n\n      if (cardElement && target === postDivRef.current) {\n        focusFirstDescendant(cardElement)\n\n        return\n      }\n\n      if (isHTMLElement(event.target)) {\n        focusedElementRef.current = event.target\n      }\n    },\n    [onFocus],\n  )\n\n  const labelId = `${id}_label`\n\n  const rootClickTimeoutRef = useRef<NodeJS.Timeout>(undefined)\n\n  // If the resulting active element (a.k.a. focused element) is not withing scope when clicking\n  // within the dialog, then we want to focus the previously interactive element in the dialog instead.\n  // This is to allow the user to tab or close the dialog by pressing escape.\n  const handleRootClick = useCallback(() => {\n    if (rootClickTimeoutRef.current) {\n      clearTimeout(rootClickTimeoutRef.current)\n    }\n\n    rootClickTimeoutRef.current = setTimeout(() => {\n      const activeElement = document.activeElement\n\n      if (activeElement && !isTargetWithinScope(boundaryElement, portalElement, activeElement)) {\n        const target = focusedElementRef.current\n\n        if (!target || !document.body.contains(target)) {\n          // No previously focused element, or it's not in the document anymore\n          const cardElement = cardRef.current\n          if (cardElement) focusFirstDescendant(cardElement)\n\n          return\n        }\n\n        target.focus()\n      }\n    }, 0)\n  }, [boundaryElement, portalElement])\n\n  return (\n    <Portal __unstable_name={portalProp}>\n      <StyledDialog\n        {...restProps}\n        $animate={animate}\n        $padding={padding}\n        $position={position}\n        aria-labelledby={labelId}\n        aria-modal\n        data-ui=\"Dialog\"\n        id={id}\n        onActivate={onActivate}\n        onClick={handleRootClick}\n        onFocus={handleFocus}\n        ref={ref}\n        role=\"dialog\"\n        zOffset={zOffset}\n      >\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={preDivRef} tabIndex={0} />\n        <DialogCard\n          __unstable_autoFocus={autoFocus}\n          __unstable_hideCloseButton={hideCloseButton}\n          contentRef={contentRef}\n          footer={footer}\n          header={header}\n          id={id}\n          onClickOutside={onClickOutside}\n          onClose={onClose}\n          portal={portalProp}\n          radius={cardRadius}\n          ref={cardRef}\n          scheme={scheme}\n          shadow={cardShadow}\n          width={width}\n        >\n          {children}\n        </DialogCard>\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={postDivRef} tabIndex={0} />\n      </StyledDialog>\n    </Portal>\n  )\n})\nDialog.displayName = 'ForwardRef(Dialog)'\n","import {useMemo} from 'react'\n\nimport {DialogPosition} from '../../types'\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogProviderProps {\n  children?: React.ReactNode\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function DialogProvider(props: DialogProviderProps): React.JSX.Element {\n  const {children, position, zOffset} = props\n\n  const contextValue: DialogContextValue = useMemo(\n    () => ({\n      version: 0.0,\n      position,\n      zOffset,\n    }),\n    [position, zOffset],\n  )\n\n  return <DialogContext.Provider value={contextValue}>{children}</DialogContext.Provider>\n}\n\nDialogProvider.displayName = 'DialogProvider'\n","import {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {\n  cloneElement,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Popover, PopoverProps} from '../../primitives'\nimport {Placement, Radius} from '../../types'\nimport {MenuProps} from './menu'\n\n/**\n * @public\n */\nexport interface MenuButtonProps {\n  /**\n   * @beta Do not use in production.\n   */\n  __unstable_disableRestoreFocusOnClose?: boolean\n  /**\n   * @deprecated Use `popover={{boundaryElement: element}}` instead.\n   */\n  boundaryElement?: HTMLElement\n  button: React.JSX.Element\n  id: string\n  menu?: React.JSX.Element\n  onClose?: () => void\n  onOpen?: () => void\n  /**\n   * @deprecated Use `popover={{placement: 'top'}}` instead.\n   */\n  placement?: Placement\n  popover?: Omit<PopoverProps, 'content' | 'open'>\n  /**\n   * @deprecated Use `popover={{scheme: 'dark'}}` instead.\n   */\n  popoverScheme?: ThemeColorSchemeKey\n  /**\n   * @deprecated Use `popover={{radius: 2}}` instead.\n   */\n  popoverRadius?: Radius | Radius[]\n  /**\n   * @beta Do not use in production.\n   * @deprecated Use `popover={{portal: true}}` instead.\n   */\n  portal?: boolean\n  /**\n   * @deprecated Use `popover={{preventOverflow: true}}` instead.\n   */\n  preventOverflow?: boolean\n}\n\n/**\n * The `MenuButton` component follows the WAI-ARIA specification for menu buttons.\n *\n * @public\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  forwardedRef: React.ForwardedRef<HTMLButtonElement | null>,\n) {\n  const {\n    __unstable_disableRestoreFocusOnClose: disableRestoreFocusOnClose = false,\n    boundaryElement: deprecated_boundaryElement,\n    button: buttonProp,\n    id,\n    menu: menuProp,\n    onClose,\n    onOpen,\n    placement: deprecated_placement,\n    popoverScheme: deprecated_popoverScheme,\n    portal: deprecated_portal = true,\n    popover,\n    popoverRadius: deprecated_popoverRadius,\n    preventOverflow: deprecated_preventOverflow,\n  } = props\n  const [open, setOpen] = useState(false)\n  const [shouldFocus, setShouldFocus] = useState<'first' | 'last' | null>(null)\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n  const [menuElements, setChildMenuElements] = useState<HTMLElement[]>([])\n  const openRef = useRef<boolean>(open)\n\n  // Notify consumers when the menu opens\n  useEffect(() => {\n    if (onOpen && open && !openRef.current) {\n      onOpen()\n    }\n  }, [onOpen, open])\n\n  // Notify consumers when the menu closes\n  useEffect(() => {\n    if (onClose && !open && openRef.current) {\n      onClose()\n    }\n  }, [onClose, open])\n\n  useEffect(() => {\n    openRef.current = open\n  }, [open])\n\n  const handleButtonClick = useCallback(() => {\n    setOpen((v) => !v)\n    setShouldFocus(null)\n  }, [])\n\n  // Prevent mouse event propagation when the menu is open.\n  // This is to ensure that `handleBlur` isn't triggered when clicking the menu button whilst open,\n  // which can lead to `setOpen` being triggered multiple times (once by `handleBlur`, and again by `handleButtonClick`).\n  const handleMouseDown = useCallback(\n    (event: PointerEvent) => {\n      if (open) event.preventDefault()\n    },\n    [open],\n  )\n\n  const handleButtonKeyDown = useCallback((event: React.KeyboardEvent<HTMLButtonElement>) => {\n    // On `ArrowDown`, `Enter` and `Space`\n    // - Opens menu and moves focus to first menuitem\n    if (event.key === 'ArrowDown' || event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('first')\n\n      return\n    }\n\n    // On `ArrowUp`\n    // - \tOpens menu and moves focus to last menuitem\n    if (event.key === 'ArrowUp') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('last')\n\n      return\n    }\n  }, [])\n\n  const handleMenuClickOutside = useCallback(\n    (event: MouseEvent) => {\n      const target = event.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (buttonElement && (target === buttonElement || buttonElement.contains(target))) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [buttonElement, menuElements],\n  )\n\n  const handleMenuEscape = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const handleBlur = useCallback(\n    (event: FocusEvent) => {\n      const target = event.relatedTarget\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (el === target || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [menuElements],\n  )\n\n  const handleItemClick = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const registerElement = useCallback((el: HTMLElement) => {\n    setChildMenuElements((els) => els.concat([el]))\n\n    return () => setChildMenuElements((els) => els.filter((_el) => _el !== el))\n  }, [])\n\n  const menuProps: MenuProps = {\n    'aria-labelledby': id,\n    'onBlurCapture': handleBlur,\n    'onClickOutside': handleMenuClickOutside,\n    'onEscape': handleMenuEscape,\n    'onItemClick': handleItemClick,\n    'originElement': buttonElement,\n    registerElement,\n    shouldFocus,\n  }\n\n  const menu = menuProp && cloneElement(menuProp, menuProps)\n\n  const button = useMemo(\n    () =>\n      buttonProp &&\n      cloneElement(buttonProp, {\n        'data-ui': 'MenuButton',\n        id,\n        'onClick': handleButtonClick,\n        'onKeyDown': handleButtonKeyDown,\n        'onMouseDown': handleMouseDown,\n        'aria-haspopup': true,\n        'aria-expanded': open,\n        'ref': setButtonElement,\n        'selected': buttonProp.props.selected ?? open,\n      }),\n    [buttonProp, handleButtonClick, handleButtonKeyDown, handleMouseDown, id, open],\n  )\n\n  // Forward button ref to parent\n  useImperativeHandle<HTMLButtonElement | null, HTMLButtonElement | null>(\n    forwardedRef,\n    () => buttonElement,\n    [buttonElement],\n  )\n\n  const popoverProps: MenuButtonProps['popover'] = useMemo(\n    () => ({\n      boundaryElement: deprecated_boundaryElement,\n      overflow: 'auto',\n      placement: deprecated_placement,\n      portal: deprecated_portal,\n      preventOverflow: deprecated_preventOverflow,\n      radius: deprecated_popoverRadius,\n      scheme: deprecated_popoverScheme,\n      ...(popover || {}),\n    }),\n    [\n      deprecated_boundaryElement,\n      deprecated_placement,\n      deprecated_popoverRadius,\n      deprecated_popoverScheme,\n      deprecated_portal,\n      deprecated_preventOverflow,\n      popover,\n    ],\n  )\n\n  return (\n    <Popover data-ui=\"MenuButton__popover\" {...popoverProps} content={menu} open={open}>\n      {button || <></>}\n    </Popover>\n  )\n})\nMenuButton.displayName = 'ForwardRef(MenuButton)'\n","import {css, keyframes} from 'styled-components'\n\nconst keyframe = keyframes`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`\n\nconst animation = css`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${keyframe};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const skeletonStyle = css<{$animated: boolean; $visible: boolean}>`\n  opacity: ${({$visible}) => ($visible ? 1 : 0)};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({$animated}) =>\n      $animated\n        ? animation\n        : css`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`\n","import {forwardRef, useEffect, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {useArrayProp} from '../../hooks'\nimport {Box, BoxProps, ResponsiveRadiusProps} from '../../primitives'\nimport {responsiveRadiusStyle, ResponsiveRadiusStyleProps} from '../../styles/internal'\nimport {skeletonStyle} from './styles'\n\nconst StyledSkeleton = styled(Box)<\n  {$animated: boolean; $visible: boolean} & ResponsiveRadiusStyleProps\n>(responsiveRadiusStyle, skeletonStyle)\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface SkeletonProps extends ResponsiveRadiusProps, Omit<BoxProps, 'children'> {\n  animated?: boolean\n  delay?: number\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Skeleton = forwardRef(function Skeleton(\n  props: SkeletonProps & React.HTMLProps<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {animated = false, delay, radius, ...restProps} = props\n  const [visible, setVisible] = useState<boolean>(delay ? false : true)\n\n  useEffect(() => {\n    if (!delay) {\n      return setVisible(true)\n    }\n\n    const timeout = setTimeout(() => {\n      setVisible(true)\n    }, delay)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [delay])\n\n  return (\n    <StyledSkeleton\n      {...restProps}\n      $animated={animated}\n      $radius={useArrayProp(radius)}\n      $visible={visible}\n      ref={ref}\n    />\n  )\n})\nSkeleton.displayName = 'ForwardRef(Skeleton)'\n","import {getTheme_v2, ThemeFontKey} from '@sanity/ui/theme'\nimport {forwardRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {useArrayProp} from '../../hooks'\nimport {_responsive, ThemeProps} from '../../styles'\nimport {Skeleton, SkeletonProps} from './skeleton'\n\nconst StyledSkeleton = styled(Skeleton)<{$size: number[]; $style: ThemeFontKey}>((\n  props: {\n    $size: number[]\n    $style: ThemeFontKey\n  } & ThemeProps,\n) => {\n  const {$size, $style} = props\n  const {font, media} = getTheme_v2(props.theme)\n  const fontStyle = font[$style]\n\n  const styles = _responsive(media, $size, (sizeIndex) => {\n    const fontSize = fontStyle.sizes[sizeIndex]\n    const capHeight = fontSize.lineHeight - fontSize.ascenderHeight - fontSize.descenderHeight\n\n    return {height: capHeight}\n  })\n\n  return styles\n})\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TextSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface LabelSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface HeadingSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface CodeSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const TextSkeleton = forwardRef(function TextSkeleton(\n  props: TextSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"text\" />\n})\nTextSkeleton.displayName = 'ForwardRef(TextSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const LabelSkeleton = forwardRef(function TextSkeleton(\n  props: LabelSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"label\" />\n})\nLabelSkeleton.displayName = 'ForwardRef(LabelSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const HeadingSkeleton = forwardRef(function TextSkeleton(\n  props: HeadingSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"heading\" />\n})\nHeadingSkeleton.displayName = 'ForwardRef(HeadingSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const CodeSkeleton = forwardRef(function TextSkeleton(\n  props: CodeSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"code\" />\n})\nCodeSkeleton.displayName = 'ForwardRef(CodeSkeleton)'\n","import {forwardRef} from 'react'\n\nimport {Box, BoxProps} from '../../primitives'\n\n/**\n * @public\n */\nexport interface TabPanelProps extends BoxProps {\n  /**\n   * The `id` of the correlating `Tab` component.\n   */\n  'aria-labelledby': string\n  'id': string\n}\n\n/**\n * @public\n */\nexport const TabPanel = forwardRef(function TabPanel(\n  props: TabPanelProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'aria-labelledby' | 'id' | 'role'>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {flex, ...restProps} = props\n\n  return (\n    <Box\n      data-ui=\"TabPanel\"\n      {...restProps}\n      flex={flex}\n      ref={ref}\n      role=\"tabpanel\"\n      tabIndex={props.tabIndex === undefined ? 0 : props.tabIndex}\n    >\n      {props.children}\n    </Box>\n  )\n})\nTabPanel.displayName = 'ForwardRef(TabPanel)'\n","import {getTheme_v2, ThemeColorStateToneKey} from '@sanity/ui/theme'\nimport {styled} from 'styled-components'\n\nimport {Card, Flex} from '../../primitives'\nimport type {ButtonTone} from '../../types'\n\nconst LOADING_BAR_HEIGHT = 2\n\nexport const STATUS_CARD_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ThemeColorStateToneKey}\n\nexport const BUTTON_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ButtonTone}\n\nexport const TextBox = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport const StyledToast = styled(Card)`\n  pointer-events: all;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  overflow: clip;\n\n  &[data-has-duration] {\n    padding-bottom: calc(${LOADING_BAR_HEIGHT}px / 2);\n  }\n`\n\nexport const LoadingBar = styled.div`\n  display: flex;\n  position: absolute;\n  bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n  overflow: clip;\n  background: transparent;\n  align-items: flex-end;\n  will-change: opacity;\n`\n\nexport const LoadingBarMask = styled(Card)`\n  position: absolute;\n  top: 0;\n  left: -${LOADING_BAR_HEIGHT}px;\n  right: -${LOADING_BAR_HEIGHT}px;\n  bottom: ${LOADING_BAR_HEIGHT}px;\n  z-index: 1;\n`\n\ntype LoadingBarProgressProps = Omit<React.ComponentProps<typeof Card>, 'tone'> & {\n  tone: ThemeColorStateToneKey\n}\nexport const LoadingBarProgress = styled<React.ComponentType<LoadingBarProgressProps>>(Card)`\n  display: block;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0% 50%;\n  background-color: ${(props) => {\n    const {color} = getTheme_v2(props.theme)\n\n    return color.button.default[props.tone].enabled.bg\n  }};\n`\n","import {CloseIcon} from '@sanity/icons'\nimport {motion, type Variant, type Variants} from 'framer-motion'\n\nimport {usePrefersReducedMotion} from '../../hooks/usePrefersReducedMotion'\nimport {Box, Button, Flex, Stack, Text} from '../../primitives'\nimport {\n  BUTTON_TONE,\n  LoadingBar,\n  LoadingBarMask,\n  LoadingBarProgress,\n  STATUS_CARD_TONE,\n  StyledToast,\n  TextBox,\n} from './styles'\n\n/**\n * @public\n */\nexport interface ToastProps {\n  closable?: boolean\n  description?: React.ReactNode\n  onClose: () => void\n  radius?: number | number[]\n  title?: React.ReactNode\n  status?: 'error' | 'warning' | 'success' | 'info'\n  duration?: number\n  updatedAt?: number\n}\n\nconst ROLES = {\n  error: 'alert',\n  warning: 'alert',\n  success: 'alert',\n  info: 'alert',\n} as const\n\n// Support pattern used by Sanity Studio, that works around the lack of `duration: Infinity` support in older @sanity/ui versions\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * The `Toast` component gives feedback to users when an action has taken place.\n *\n * Toasts can be closed with a close button, or auto-dismiss after a certain timeout.\n *\n * @public\n */\nexport function Toast(\n  props: ToastProps &\n    Omit<\n      React.HTMLProps<HTMLDivElement>,\n      | 'as'\n      | 'height'\n      | 'ref'\n      | 'title'\n      | 'onAnimationStart'\n      | 'onDragStart'\n      | 'onDragEnd'\n      | 'onDrag'\n    >,\n): React.JSX.Element {\n  const {\n    closable,\n    description,\n    duration,\n    onClose,\n    radius = 3,\n    title,\n    status,\n    updatedAt,\n    ...restProps\n  } = props\n  const cardTone = status ? STATUS_CARD_TONE[status] : 'default'\n  const buttonTone = status ? BUTTON_TONE[status] : 'default'\n  const role = status ? ROLES[status] : 'status'\n\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const visualDuration: number = prefersReducedMotion ? 0 : 0.26\n  const transition = visualDuration\n    ? {type: 'spring' as const, visualDuration, bounce: 0.25}\n    : {duration: 0}\n\n  const hasDuration = duration && isFinite(duration) && duration < LONG_ENOUGH_BUT_NOT_TOO_LONG\n  const initial: ContainerVariants[] = ['hidden', 'initial']\n  const animate: ContainerVariants[] = ['visible', 'slideIn']\n  const exit: ContainerVariants[] = ['hidden', 'slideOut']\n\n  return (\n    <MotionToast\n      data-ui=\"Toast\"\n      role={role}\n      {...restProps}\n      data-has-duration={hasDuration ? '' : undefined}\n      custom={visualDuration}\n      radius={radius}\n      shadow={2}\n      tone={cardTone}\n      forwardedAs=\"li\"\n      layout=\"position\"\n      variants={container}\n      initial={initial}\n      animate={animate}\n      exit={exit}\n      transition={transition}\n    >\n      <MotionFlex align=\"flex-start\" variants={content} transition={transition}>\n        <TextBox flex={1} padding={3}>\n          <Stack space={3}>\n            {title && (\n              <Text size={1} weight=\"medium\">\n                {title}\n              </Text>\n            )}\n            {description && (\n              <MotionText muted size={1} variants={content} transition={transition}>\n                {description}\n              </MotionText>\n            )}\n          </Stack>\n        </TextBox>\n\n        {closable && (\n          <Box padding={1}>\n            <Button\n              as=\"button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              padding={2}\n              tone={buttonTone}\n              onClick={onClose}\n              style={{verticalAlign: 'top'}}\n            />\n          </Box>\n        )}\n      </MotionFlex>\n      {hasDuration && (\n        <MotionLoadingBar variants={content} transition={transition}>\n          <LoadingBarMask tone={cardTone} radius={radius} />\n          <MotionLoadingBarProgress\n            key={`progress-${updatedAt}`}\n            tone={cardTone}\n            initial={{scaleX: 0}}\n            animate={{scaleX: 1}}\n            transition={{delay: visualDuration, duration: duration / 1_000, ease: 'linear'}}\n            onAnimationComplete={onClose}\n          />\n        </MotionLoadingBar>\n      )}\n    </MotionToast>\n  )\n}\n\nToast.displayName = 'Toast'\n\nconst container = {\n  initial: {y: 32, scale: 0.5, zIndex: 1},\n  hidden: {opacity: 0},\n  visible: (visualDuration: number) => {\n    if (!visualDuration) return {opacity: 1}\n\n    return {\n      opacity: 1,\n      transition: {\n        when: 'beforeChildren',\n        staggerChildren: visualDuration / 3,\n        duration: visualDuration / 3,\n      },\n    }\n  },\n  slideIn: {\n    y: 0,\n    scale: 1,\n  },\n  slideOut: {\n    zIndex: 0,\n    scale: 0.75,\n  },\n} satisfies Variants\ntype ContainerVariants = keyof typeof container\n\nconst content = {\n  initial: {\n    willChange: 'transform',\n  },\n  hidden: {\n    opacity: 0,\n  },\n  visible: {\n    opacity: 1,\n  },\n} satisfies Partial<Record<ContainerVariants, Variant>>\n\nconst MotionToast = motion.create(StyledToast)\nconst MotionFlex = motion.create(Flex)\nconst MotionText = motion.create(Text)\nconst MotionLoadingBar = motion.create(LoadingBar)\nconst MotionLoadingBarProgress = motion.create(LoadingBarProgress)\n","import {useSyncExternalStore} from 'react'\n\n/**\n * Some components should only render after mounting to the DOM, and not be rendered at all during SSR renderToString or equivalent.\n * @public\n */\nexport function useMounted(): boolean {\n  return useSyncExternalStore(\n    subscribe,\n    () => true,\n    () => false,\n  )\n}\n\nconst subscribe = () => () => {}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {ToastContextValue} from './types'\n\nexport const ToastContext = createGlobalScopedContext<ToastContextValue | null>(\n  '@sanity/ui/context/toast',\n  null,\n)\n","import {styled} from 'styled-components'\n\nimport {Grid} from '../../primitives/grid'\nimport {useLayer} from '../../utils'\n\n/**\n * @public\n */\nexport interface ToastLayerProps {\n  children: React.ReactNode\n  padding?: number | number[]\n  paddingX?: number | number[]\n  paddingY?: number | number[]\n  gap?: number | number[]\n}\n\n/**\n * @internal\n */\nexport function ToastLayer(props: ToastLayerProps): React.JSX.Element {\n  const {children, padding = 4, paddingX, paddingY, gap = 3} = props\n  const {zIndex} = useLayer()\n\n  return (\n    <StyledLayer\n      forwardedAs=\"ul\"\n      data-ui=\"ToastProvider\"\n      padding={padding}\n      paddingX={paddingX}\n      paddingY={paddingY}\n      gap={gap}\n      columns={1}\n      style={{zIndex}}\n    >\n      {children}\n    </StyledLayer>\n  )\n}\n\nToastLayer.displayName = 'ToastLayer'\n\nconst StyledLayer = styled(Grid)`\n  box-sizing: border-box;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  list-style: none;\n  pointer-events: none;\n  max-width: 420px;\n  width: 100%;\n`\n","let toastId = 0\n\n/** @internal */\nexport function generateToastId(): string {\n  return String(toastId++)\n}\n","import {AnimatePresence} from 'framer-motion'\nimport {startTransition, useMemo, useState} from 'react'\n\nimport {useMounted} from '../../hooks/useMounted'\nimport {LayerProvider} from '../../utils'\nimport {Toast} from './toast'\nimport {ToastContext} from './toastContext'\nimport {ToastLayer, type ToastLayerProps} from './toastLayer'\nimport {generateToastId} from './toastState'\nimport {ToastContextValue, ToastParams} from './types'\n\ntype ToastState = {\n  dismiss: () => void\n  id: string\n  updatedAt: number\n  params: ToastParams\n}[]\n\n/**\n * @public\n */\nexport interface ToastProviderProps extends Omit<ToastLayerProps, 'children'> {\n  children?: React.ReactNode\n  zOffset?: number | number[]\n}\n\n/**\n * @public\n */\nexport function ToastProvider(props: ToastProviderProps): React.JSX.Element {\n  const {children, padding, paddingX, paddingY, gap, zOffset = 1} = props\n  const [state, setState] = useState<ToastState>([])\n  const mounted = useMounted()\n\n  const value: ToastContextValue = useMemo(() => {\n    const push = (params: ToastParams) => {\n      const id = params.id || generateToastId()\n      const duration = params.duration || 5000\n\n      startTransition(() => {\n        setState((prevState): ToastState => {\n          /**\n           * Backwards compatibility for `sanity` patterns workaround a lack of programatically dismissible toasts.\n           * It uses a super short duration that closes the toast immediately in previous versions of `@sanity/ui`.\n           * We interpret this as a request to dismiss the toast immediately, and remove it from the state right away.\n           * Even once we support programatic dismissal we'll need to keep this for backwards compatibility with v2 and v1.\n           */\n          if (duration === 0.01) {\n            return prevState.filter((toast) => toast.id !== id)\n          }\n\n          /**\n           * Creates a function to dismiss this specific toast.\n           * This function will be passed to the Toast component\n           * and called either on close button click or after duration.\n           */\n          const dismiss = () =>\n            startTransition(() =>\n              setState((currentState) => currentState.filter((toast) => toast.id !== id)),\n            )\n\n          /**\n           * Create updated state by:\n           * 1. Removing any existing toast with the same ID (prevents duplicates)\n           * 2. Adding the new toast with its dismiss handler\n           * 3. Updates the `updatedAt` timestamp, which resets progress bar count downs.\n           */\n          return [\n            ...prevState.filter((toast) => toast.id !== id),\n            {\n              dismiss,\n              id,\n              updatedAt: Date.now(),\n              params: {...params, duration},\n            },\n          ]\n        })\n      })\n\n      return id\n    }\n\n    return {version: 0.0, push}\n  }, [])\n\n  return (\n    <ToastContext.Provider value={value}>\n      {children}\n      {mounted && (\n        <LayerProvider zOffset={zOffset}>\n          <ToastLayer padding={padding} paddingX={paddingX} paddingY={paddingY} gap={gap}>\n            <AnimatePresence initial={false} mode=\"popLayout\">\n              {state.map(({dismiss, id, params, updatedAt}) => (\n                <Toast\n                  key={id}\n                  closable={params.closable}\n                  description={params.description}\n                  onClose={dismiss}\n                  status={params.status}\n                  title={params.title}\n                  duration={params.duration}\n                  updatedAt={updatedAt}\n                />\n              ))}\n            </AnimatePresence>\n          </ToastLayer>\n        </LayerProvider>\n      )}\n    </ToastContext.Provider>\n  )\n}\n\nToastProvider.displayName = 'ToastProvider'\n","import {useContext} from 'react'\n\nimport {isRecord} from '../../lib/isRecord'\nimport {ToastContext} from './toastContext'\nimport {ToastContextValue} from './types'\n\n/**\n * @public\n */\nexport function useToast(): ToastContextValue {\n  const value = useContext(ToastContext)\n\n  if (!value) {\n    throw new Error('useToast(): missing context value')\n  }\n\n  // NOTE: This check is for future-compatiblity\n  // - If the value is not an object, it’s not compatible with the current version\n  // - If the value is an object, but doesn’t have `version: 0.0`, it’s not compatible with the current version\n  if (!isRecord(value) || value.version !== 0.0) {\n    throw new Error('useToast(): the context value is not compatible')\n  }\n\n  return value\n}\n","import {TreeState} from './types'\n\nexport function _findPrevItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(0, idx)\n  const len = els.length\n\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _findNextItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(idx)\n  const len = itemElements.length\n\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i]) {\n      continue\n    }\n\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _focusItemElement(el: HTMLElement): void {\n  if (el.getAttribute('role') === 'treeitem') {\n    el.focus()\n  }\n\n  if (el.getAttribute('role') === 'none') {\n    const firstChild = el.firstChild\n\n    if (firstChild && firstChild instanceof HTMLElement) {\n      firstChild.focus()\n    }\n  }\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @internal\n */\nexport const TreeContext = createGlobalScopedContext<TreeContextValue | null>(\n  '@sanity/ui/context/tree',\n  null,\n)\n","import {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Stack} from '../../primitives'\nimport {_findNextItemElement, _findPrevItemElement, _focusItemElement} from './helpers'\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue, TreeState} from './types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TreeProps {\n  space?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Tree = memo(\n  forwardRef(function Tree(\n    props: TreeProps &\n      Omit<React.HTMLProps<HTMLDivElement>, 'align' | 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n    forwardedRef: React.ForwardedRef<HTMLDivElement>,\n  ): React.JSX.Element {\n    const {children, space = 1, onFocus, ...restProps} = props\n    const ref = useRef<HTMLDivElement | null>(null)\n    const [focusedElement, setFocusedElement] = useState<HTMLElement | null>(null)\n    const focusedElementRef = useRef(focusedElement)\n    const path: string[] = useMemo(() => [], [])\n    const [itemElements, setItemElements] = useState<HTMLElement[]>([])\n    const [state, setState] = useState<TreeState>({})\n    const stateRef = useRef(state)\n\n    useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    useEffect(() => {\n      focusedElementRef.current = focusedElement\n    }, [focusedElement])\n\n    useEffect(() => {\n      stateRef.current = state\n    }, [state])\n\n    const registerItem = useCallback(\n      (element: HTMLElement, path: string, expanded: boolean, selected: boolean) => {\n        setState((s) => ({...s, [path]: {element, expanded}}))\n\n        if (selected) {\n          setFocusedElement(element)\n        }\n\n        return () => {\n          setState((s) => {\n            const newState = {...s}\n\n            delete newState[path]\n\n            return newState\n          })\n        }\n      },\n      [],\n    )\n\n    const setExpanded = useCallback((path: string, expanded: boolean) => {\n      setState((s) => {\n        const itemState = s[path]\n\n        if (!itemState) return s\n\n        return {...s, [path]: {...itemState, expanded}}\n      })\n    }, [])\n\n    const contextValue: TreeContextValue = useMemo(\n      () => ({\n        version: 0.0,\n        focusedElement: focusedElement || itemElements[0] || null,\n        level: 0,\n        path,\n        registerItem,\n        setExpanded,\n        setFocusedElement,\n        space,\n        state,\n      }),\n      [focusedElement, itemElements, path, registerItem, setExpanded, space, state],\n    )\n\n    const handleKeyDown = useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (!focusedElementRef.current) return\n\n        if (event.key === 'ArrowDown') {\n          event.preventDefault()\n\n          const nextEl = _findNextItemElement(\n            stateRef.current,\n            itemElements,\n            focusedElementRef.current,\n          )\n\n          if (nextEl) {\n            _focusItemElement(nextEl)\n            setFocusedElement(nextEl)\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowUp') {\n          event.preventDefault()\n\n          const prevEl = _findPrevItemElement(\n            stateRef.current,\n            itemElements,\n            focusedElementRef.current,\n          )\n\n          if (prevEl) {\n            _focusItemElement(prevEl)\n            setFocusedElement(prevEl)\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowLeft') {\n          event.preventDefault()\n\n          const itemKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n          if (!itemKey) return\n\n          const itemState = stateRef.current[itemKey]\n\n          if (!itemState) return\n\n          if (itemState.expanded) {\n            setState((s) => {\n              const itemState = s[itemKey]\n\n              if (!itemState) return s\n\n              return {...s, [itemKey]: {...itemState, expanded: false}}\n            })\n          } else {\n            const itemPath = itemKey.split('/')\n\n            itemPath.pop()\n\n            const parentKey = itemPath.join('/')\n            const parentState = parentKey && stateRef.current[parentKey]\n\n            if (parentState) {\n              parentState.element.focus()\n              setFocusedElement(parentState.element)\n            }\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowRight') {\n          event.preventDefault()\n\n          const focusedKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n          if (!focusedKey) return\n\n          if (!stateRef.current[focusedKey]?.expanded) {\n            setState((s) => {\n              const itemState = s[focusedKey]\n\n              if (!itemState) return s\n\n              return {...s, [focusedKey]: {...itemState, expanded: true}}\n            })\n          }\n\n          return\n        }\n      },\n      [itemElements],\n    )\n\n    const handleFocus = useCallback(\n      (event: React.FocusEvent<HTMLDivElement>) => {\n        setFocusedElement(event.target)\n\n        // Call the element's `focus` handler\n        onFocus?.(event)\n      },\n      [onFocus],\n    )\n\n    useEffect(() => {\n      if (!ref.current) return\n      const _itemElements = Array.from(\n        ref.current.querySelectorAll('[data-ui=\"TreeItem\"]'),\n      ) as HTMLElement[]\n\n      setItemElements(_itemElements)\n    }, [children])\n\n    return (\n      <TreeContext.Provider value={contextValue}>\n        <Stack\n          as=\"ul\"\n          data-ui=\"Tree\"\n          {...restProps}\n          onFocus={handleFocus}\n          onKeyDown={handleKeyDown}\n          ref={ref}\n          role=\"tree\"\n          space={space}\n        >\n          {children}\n        </Stack>\n      </TreeContext.Provider>\n    )\n  }),\n)\nTree.displayName = 'Memo(ForwardRef(Tree))'\n","import {getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {rem, ThemeProps} from '../../styles'\nimport {_cardColorStyle} from '../../styles/card'\n\nexport function treeItemRootStyle(): ReturnType<typeof css> {\n  return css`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      background-color: var(--card-bg-color);\n      color: var(--treeitem-fg-color);\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `\n}\n\nexport function treeItemRootColorStyle(props: ThemeProps): ReturnType<typeof css> {\n  const $tone = 'default'\n  const {color} = getTheme_v2(props.theme)\n  const tone = color.selectable[$tone]\n\n  return css`\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n  `\n}\n\nexport interface TreeItemBoxStyleProps {\n  $level: number\n}\n\nexport function treeItemBoxStyle(\n  props: TreeItemBoxStyleProps & ThemeProps,\n): ReturnType<typeof css> {\n  const {$level} = props\n  const {space} = getTheme_v2(props.theme)\n\n  return css`\n    padding-left: ${rem(space[2] * $level)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `\n}\n","import {useContext} from 'react'\n\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @beta\n */\nexport function useTree(): TreeContextValue {\n  const tree = useContext(TreeContext)\n\n  if (!tree) {\n    throw new Error('Tree: missing context value')\n  }\n\n  return tree\n}\n","import {memo} from 'react'\n\nimport {Stack} from '../../primitives'\nimport {useTree} from './useTree'\n\nexport interface TreeGroupProps {\n  expanded?: boolean\n}\n\nexport const TreeGroup = memo(function TreeGroup(\n  props: TreeGroupProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n): React.JSX.Element {\n  const {children, expanded = false, ...restProps} = props\n  const tree = useTree()\n\n  return (\n    <Stack\n      as=\"ul\"\n      data-ui=\"TreeGroup\"\n      {...restProps}\n      hidden={!expanded}\n      marginTop={tree.space}\n      role=\"group\"\n      space={tree.space}\n    >\n      {children}\n    </Stack>\n  )\n})\n","import {ToggleArrowRightIcon} from '@sanity/icons'\nimport {ThemeFontWeightKey} from '@sanity/ui/theme'\nimport {memo, useCallback, useEffect, useId, useMemo, useRef, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Box, BoxProps, Flex, Text} from '../../primitives'\nimport {\n  treeItemBoxStyle,\n  TreeItemBoxStyleProps,\n  treeItemRootColorStyle,\n  treeItemRootStyle,\n} from './style'\nimport {TreeContext} from './treeContext'\nimport {TreeGroup} from './treeGroup'\nimport {useTree} from './useTree'\n\n/**\n * @beta\n */\nexport interface TreeItemProps {\n  expanded?: boolean\n  fontSize?: number | number[]\n  icon?: React.ElementType\n  /**\n   * Allows passing a custom element type to the link component\n   */\n  linkAs?: BoxProps['as']\n  padding?: number | number[]\n  space?: number | number[]\n  text?: React.ReactNode\n  weight?: ThemeFontWeightKey\n}\n\nconst StyledTreeItem = memo(styled.li(treeItemRootStyle, treeItemRootColorStyle))\n\nconst TreeItemBox = styled(Box).attrs({forwardedAs: 'a'})<TreeItemBoxStyleProps>(treeItemBoxStyle)\n\nconst ToggleArrowText = styled(Text)`\n  & > svg {\n    transition: transform 100ms;\n  }\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const TreeItem = memo(function TreeItem(\n  props: TreeItemProps & Omit<React.HTMLProps<HTMLLIElement>, 'as' | 'ref' | 'role'>,\n): React.JSX.Element {\n  const {\n    children,\n    expanded: expandedProp = false,\n    fontSize = 1,\n    href,\n    icon: IconComponent,\n    id: idProp,\n    linkAs,\n    muted,\n    onClick,\n    padding = 2,\n    selected = false,\n    space = 2,\n    text,\n    weight,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLLIElement | null>(null)\n  const treeitemRef = useRef<HTMLDivElement | null>(null)\n  const tree = useTree()\n  const {path, registerItem, setExpanded, setFocusedElement} = tree\n  const _id = useId()\n  const id = idProp || _id\n  const [itemPath, itemKey] = useMemo(() => {\n    const itemPath = path.concat([id || ''])\n    return [itemPath, itemPath.join('/')]\n  }, [id, path])\n  const itemState = tree.state[itemKey]\n  const focused = tree.focusedElement === rootElement\n  const expanded = itemState?.expanded === undefined ? expandedProp : itemState?.expanded || false\n  const tabIndex = tree.focusedElement && tree.focusedElement === rootElement ? 0 : -1\n  const contextValue = useMemo(\n    () => ({...tree, level: tree.level + 1, path: itemPath}),\n    [itemPath, tree],\n  )\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLLIElement>) => {\n      if (onClick) onClick(event)\n\n      const target = event.target\n\n      if (\n        target instanceof HTMLElement &&\n        (target.getAttribute('data-ui') === 'TreeItem' ||\n          target.closest('[data-ui=\"TreeItem__box\"]'))\n      ) {\n        event.stopPropagation()\n        setExpanded(itemKey, !expanded)\n        setFocusedElement(rootElement)\n      }\n    },\n    [expanded, itemKey, onClick, rootElement, setExpanded, setFocusedElement],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      if (focused && event.key === 'Enter') {\n        const el = treeitemRef.current || rootElement\n\n        el?.click()\n      }\n    },\n    [focused, rootElement],\n  )\n\n  useEffect(() => {\n    if (!rootElement) return\n\n    return registerItem(rootElement, itemKey, expanded, selected)\n  }, [expanded, itemKey, registerItem, rootElement, selected])\n\n  const content = (\n    <Flex padding={padding}>\n      <Box\n        marginRight={space}\n        style={{\n          visibility: IconComponent || children ? 'visible' : 'hidden',\n          pointerEvents: 'none',\n        }}\n      >\n        {IconComponent && (\n          <Text muted={muted} size={fontSize} weight={weight}>\n            <IconComponent />\n          </Text>\n        )}\n        {!IconComponent && (\n          <ToggleArrowText muted={muted} size={fontSize} weight={weight}>\n            <ToggleArrowRightIcon style={{transform: expanded ? 'rotate(90deg)' : undefined}} />\n          </ToggleArrowText>\n        )}\n      </Box>\n      <Box flex={1}>\n        <Text muted={muted} size={fontSize} textOverflow=\"ellipsis\" weight={weight}>\n          {text}\n        </Text>\n      </Box>\n    </Flex>\n  )\n\n  if (href) {\n    return (\n      <StyledTreeItem\n        data-selected={selected ? '' : undefined}\n        data-tree-id={id}\n        data-tree-key={itemKey}\n        data-ui=\"TreeItem\"\n        {...restProps}\n        onClick={handleClick}\n        ref={setRootElement}\n        role=\"none\"\n      >\n        <TreeItemBox\n          $level={tree.level}\n          aria-expanded={expanded}\n          as={linkAs}\n          data-ui=\"TreeItem__box\"\n          href={href}\n          ref={treeitemRef}\n          role=\"treeitem\"\n          tabIndex={tabIndex}\n        >\n          {content}\n        </TreeItemBox>\n\n        <TreeContext.Provider value={contextValue}>\n          {children && <TreeGroup hidden={!expanded}>{children}</TreeGroup>}\n        </TreeContext.Provider>\n      </StyledTreeItem>\n    )\n  }\n\n  return (\n    <StyledTreeItem\n      data-selected={selected ? '' : undefined}\n      data-ui=\"TreeItem\"\n      data-tree-id={id}\n      data-tree-key={itemKey}\n      {...restProps}\n      aria-expanded={expanded}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={setRootElement}\n      role=\"treeitem\"\n      tabIndex={tabIndex}\n    >\n      <TreeItemBox $level={tree.level} as=\"div\" data-ui=\"TreeItem__box\">\n        {content}\n      </TreeItemBox>\n\n      <TreeContext.Provider value={contextValue}>\n        {children && <TreeGroup expanded={expanded}>{children}</TreeGroup>}\n      </TreeContext.Provider>\n    </StyledTreeItem>\n  )\n})\nTreeItem.displayName = 'Memo(TreeItem)'\n"],"names":["_raf","fn","frameId","requestAnimationFrame","cancelAnimationFrame","_raf2","innerDispose","outerDispose","_hasFocus","element","Boolean","document","activeElement","contains","isFocusable","tabIndex","getAttribute","isHTMLAnchorElement","href","rel","isHTMLInputElement","type","disabled","isHTMLButtonElement","isHTMLSelectElement","isHTMLTextAreaElement","attemptFocus","focus","focusFirstDescendant","i","childNodes","length","child","isHTMLElement","focusLastDescendant","_getElements","elementsArg","ret","el","Array","isArray","push","filter","useClickOutside","listener","t0","boundaryElement","$","_c","undefined","EMPTY_ARRAY","setElement","useState","t1","elements","setElements","elementsRef","useRef","t2","t3","prevElements","current","nextElements","includes","el_0","useEffect","t4","t5","handleWindowMouseDown","evt","target","Node","el_1","window","addEventListener","removeEventListener","useElementRect","useElementSize","_contentRect","useForwardedRef","ref","innerRef","Symbol","for","useImperativeHandle","ErrorBoundary","Component","state","error","getDerivedStateFromError","componentDidCatch","info","props","onCatch","render","message","jsx","Code","children","StyledAutocomplete","styled","div","withConfig","displayName","componentId","ListBox","Box","rotate","keyframes","AnimatedSpinnerIcon","SpinnerIcon","AutocompleteOption","id","onSelect","selected","value","setTimeout","handleClick","event","key","_isEnterToClickElement","currentTarget","handleKeyDown","autocompleteReducer","msg","activeValue","focused","query","listFocused","AUTOCOMPLETE_LISTBOX_IGNORE_KEYS","AUTOCOMPLETE_POPOVER_PLACEMENT","AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS","DEFAULT_RENDER_VALUE","option","DEFAULT_FILTER_OPTION","toLowerCase","indexOf","InnerAutocomplete","forwardRef","forwardedRef","customValidity","filterOptionProp","icon","loading","onBlur","onChange","onFocus","onQueryChange","openButton","openOnFocus","optionsProp","prefix","readOnly","relatedElements","renderOptionProp","renderPopover","restProps","suffix","t6","valueProp","border","filterOption","fontSize","listBox","options","padding","popover","radius","renderOption","renderValue","EMPTY_RECORD","paddingProp","t7","t8","t9","dispatch","useReducer","t10","t11","value_0","Card","Text","rootElementRef","resultsPopoverElementRef","inputElementRef","listBoxElementRef","inputElement","setInputElement","listFocusedRef","valueRef","valuePropRef","popoverMouseWithinRef","t12","t13","t14","listBoxId","useArrayProp","t15","find","o","currentOption","t16","t17","filteredOptions","filteredOptionsLen","activeItemId","expanded","concat","focusInside","e","handleRootBlur","t18","event_0","listBoxElement","focusedElement","HTMLElement","listFocused_0","handleRootFocus","t19","v","handleOptionSelect","t20","event_1","preventDefault","activeOption","o_0","activeIndex","nextActiveOption","activeOption_0","o_1","activeIndex_0","nextActiveOption_0","listEl","handleRootKeyDown","t21","event_2","nextQuery","handleInputChange","t22","dispatchOpen","t23","event_3","handleInputFocus","t24","handlePopoverMouseEnter","t25","handlePopoverMouseLeave","t26","handleClearButtonClick","t27","handleClearButtonFocus","t28","t29","t30","t31","t32","t33","listElement","activeOption_1","o_2","activeIndex_1","activeItemElement","t34","bb0","t35","clearButton","map","_temp","openButtonBoxPadding","t36","_temp2","openButtonPadding","openButtonProps","t37","event_4","onClick","handleOpenClick","t38","Button","ChevronDownIcon","openButtonNode","t39","bb1","t40","inputValue","event_5","handleListBoxKeyDown","t41","bb2","t42","t43","option_0","active","cloneElement","Stack","t44","content","bb3","Popover","results","t45","TextInput","t46","jsxs","RenderPopover","hidden","onMouseEnter","onMouseLeave","Autocomplete","v_0","v_1","Math","max","StyledBreadcrumbs","ol","ExpandButton","Breadcrumbs","maxLength","separator","space","spaceRaw","open","setOpen","expandElementRef","popoverElementRef","collapse","useCallback","expand","useClickOutsideEvent","rawItems","useMemo","Children","toArray","isValidElement","items","len","beforeLength","ceil","afterLength","floor","slice","item","itemIndex","Fragment","dialogStyle","theme","color","getTheme_v2","display","backdrop","responsiveDialogPositionStyle","media","_responsive","$position","position","animationDialogStyle","$animate","css","DialogContext","createGlobalScopedContext","version","useDialog","useContext","isTargetWithinScope","portalElement","containsOrEqualsElement","StyledDialog","Layer","responsivePaddingStyle","DialogContainer","Container","DialogCardRoot","DialogLayout","Flex","DialogHeader","DialogContent","DialogFooter","DialogCard","__unstable_autoFocus","autoFocus","__unstable_hideCloseButton","hideCloseButton","contentRef","forwardedContentRef","footer","header","onClickOutside","onClose","portal","portalProp","radiusProp","scheme","shadow","shadowProp","width","widthProp","usePortal","useBoundaryElement","layer","useLayer","isTopLayer","labelId","showCloseButton","showHeader","stopPropagation","useGlobalKeyDown","target_0","CloseIcon","Dialog","dialog","useTheme_v2","_positionProp","_zOffsetProp","onActivate","cardRadius","cardShadow","zOffset","animate","cardRadiusProp","_animate","positionProp","zOffsetProp","usePrefersReducedMotion","preDivRef","postDivRef","cardRef","focusedElementRef","cardElement","handleFocus","rootClickTimeoutRef","clearTimeout","body","cardElement_0","handleRootClick","Portal","DialogProvider","contextValue","MenuButton","__unstable_disableRestoreFocusOnClose","deprecated_boundaryElement","button","buttonProp","menu","menuProp","onOpen","placement","deprecated_placement","popoverScheme","deprecated_popoverScheme","popoverRadius","deprecated_popoverRadius","preventOverflow","deprecated_preventOverflow","disableRestoreFocusOnClose","deprecated_portal","shouldFocus","setShouldFocus","buttonElement","setButtonElement","menuElements","setChildMenuElements","openRef","handleButtonClick","handleMouseDown","handleButtonKeyDown","handleMenuClickOutside","handleMenuEscape","relatedTarget","handleBlur","handleItemClick","els","els_0","_el","registerElement","overflow","popoverProps","keyframe","animation","skeletonStyle","$visible","$animated","StyledSkeleton","responsiveRadiusStyle","Skeleton","delay","animated","visible","setVisible","timeout","$size","$style","font","fontStyle","sizeIndex","sizes","height","lineHeight","ascenderHeight","descenderHeight","TextSkeleton","size","LabelSkeleton","HeadingSkeleton","CodeSkeleton","TabPanel","flex","LOADING_BAR_HEIGHT","STATUS_CARD_TONE","warning","success","BUTTON_TONE","TextBox","StyledToast","LoadingBar","LoadingBarMask","LoadingBarProgress","default","tone","enabled","bg","ROLES","LONG_ENOUGH_BUT_NOT_TOO_LONG","Toast","closable","description","duration","status","title","updatedAt","cardTone","buttonTone","role","visualDuration","bounce","transition","hasDuration","isFinite","initial","exit","verticalAlign","scaleX","ease","container","y","scale","zIndex","opacity","when","staggerChildren","slideIn","slideOut","willChange","MotionToast","motion","create","MotionFlex","MotionText","MotionLoadingBar","MotionLoadingBarProgress","useMounted","useSyncExternalStore","subscribe","ToastContext","ToastLayer","paddingX","paddingY","gap","StyledLayer","Grid","toastId","generateToastId","String","ToastProvider","setState","mounted","params","startTransition","prevState","toast","dismiss","currentState","toast_0","toast_1","Date","now","LayerProvider","AnimatePresence","dismiss_0","id_0","params_0","useToast","Error","isRecord","_findPrevItemElement","itemElements","idx","itemKey","segments","split","pop","p","j","k","join","_findNextItemElement","_focusItemElement","firstChild","TreeContext","Tree","memo","setFocusedElement","path","setItemElements","stateRef","path_0","s","s_0","newState","registerItem","path_1","expanded_0","s_1","itemState","setExpanded","level","nextEl","prevEl","itemState_0","s_2","itemState_1","itemPath","parentKey","parentState","focusedKey","s_3","itemState_2","_itemElements","from","querySelectorAll","treeItemRootStyle","treeItemRootColorStyle","$tone","selectable","_cardColorStyle","pressed","hovered","treeItemBoxStyle","$level","rem","useTree","tree","TreeGroup","StyledTreeItem","li","TreeItemBox","attrs","forwardedAs","ToggleArrowText","TreeItem","IconComponent","idProp","linkAs","muted","text","weight","expandedProp","rootElement","setRootElement","treeitemRef","_id","useId","itemPath_0","closest","click","visibility","pointerEvents","ToggleArrowRightIcon","transform"],"mappings":"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"}