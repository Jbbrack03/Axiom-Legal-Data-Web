{"version":3,"file":"index.mjs","sources":["../src/core/helpers/animation.ts","../src/core/helpers/focus.ts","../src/core/hooks/useClickOutside.ts","../src/core/hooks/useElementRect/useElementRect.ts","../src/core/hooks/useForwardedRef.ts","../src/core/utils/errorBoundary.tsx","../src/core/components/autocomplete/autocomplete.styles.tsx","../src/core/components/autocomplete/autocompleteOption.tsx","../src/core/components/autocomplete/autocompleteReducer.ts","../src/core/components/autocomplete/constants.ts","../src/core/components/autocomplete/autocomplete.tsx","../src/core/components/breadcrumbs/breadcrumbs.styles.ts","../src/core/components/breadcrumbs/breadcrumbs.tsx","../src/core/components/dialog/styles.ts","../src/core/components/dialog/dialogContext.ts","../src/core/components/dialog/useDialog.ts","../src/core/components/dialog/dialog.tsx","../src/core/components/dialog/dialogProvider.tsx","../src/core/components/menu/menuButton.tsx","../src/core/components/skeleton/styles.ts","../src/core/components/skeleton/skeleton.tsx","../src/core/components/skeleton/textSkeleton.tsx","../src/core/components/tab/tabPanel.tsx","../src/core/components/toast/styles.ts","../src/core/components/toast/toast.tsx","../src/core/hooks/useMounted.ts","../src/core/components/toast/toastContext.ts","../src/core/components/toast/toastLayer.tsx","../src/core/components/toast/toastState.ts","../src/core/components/toast/toastProvider.tsx","../src/core/components/toast/useToast.ts","../src/core/components/tree/helpers.ts","../src/core/components/tree/treeContext.ts","../src/core/components/tree/tree.tsx","../src/core/components/tree/style.ts","../src/core/components/tree/useTree.ts","../src/core/components/tree/treeGroup.tsx","../src/core/components/tree/treeItem.tsx"],"sourcesContent":["/**\n * @internal\n */\nexport function _raf(fn: () => void): () => void {\n  const frameId = requestAnimationFrame(fn)\n\n  return () => {\n    cancelAnimationFrame(frameId)\n  }\n}\n\n/**\n * @internal\n */\nexport function _raf2(fn: () => void): () => void {\n  let innerDispose: (() => void) | null = null\n\n  const outerDispose = _raf(() => {\n    innerDispose = _raf(fn)\n  })\n\n  return () => {\n    if (innerDispose) innerDispose()\n\n    outerDispose()\n  }\n}\n","import {\n  isHTMLAnchorElement,\n  isHTMLButtonElement,\n  isHTMLElement,\n  isHTMLInputElement,\n  isHTMLSelectElement,\n  isHTMLTextAreaElement,\n} from './element'\n\n// export const globalFocusState = {\n//   IgnoreUtilFocusChanges: false,\n// }\n\n/**\n * @internal\n */\nexport function _hasFocus(element: HTMLElement): boolean {\n  return Boolean(document.activeElement) && element.contains(document.activeElement)\n}\n\n/**\n * @internal\n */\nexport function isFocusable(element: HTMLElement): boolean {\n  if (\n    element.tabIndex > 0 ||\n    (element.tabIndex === 0 && element.getAttribute('tabIndex') !== null)\n  ) {\n    return true\n  }\n\n  if (isHTMLAnchorElement(element)) {\n    return Boolean(element.href) && element.rel !== 'ignore'\n  }\n\n  if (isHTMLInputElement(element)) {\n    return element.type !== 'hidden' && element.type !== 'file' && !element.disabled\n  }\n\n  if (\n    isHTMLButtonElement(element) ||\n    isHTMLSelectElement(element) ||\n    isHTMLTextAreaElement(element)\n  ) {\n    return !element.disabled\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function attemptFocus(element: HTMLElement): boolean {\n  if (!isFocusable(element)) {\n    return false\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = true\n\n  try {\n    element.focus()\n  } catch {\n    // ignore\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = false\n\n  return document.activeElement === element\n}\n\n/**\n * @internal\n */\nexport function focusFirstDescendant(element: HTMLElement): boolean {\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusFirstDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function focusLastDescendant(element: HTMLElement): boolean {\n  for (let i = element.childNodes.length - 1; i >= 0; i--) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusLastDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n","import {useEffect, useRef, useState} from 'react'\n\nimport {EMPTY_ARRAY} from '../constants'\n\n/**\n * @public\n */\nexport type ClickOutsideListener = (event: MouseEvent) => void\n\n/**\n * @public\n */\nexport type ClickOutsideElements = (HTMLElement | null | (HTMLElement | null)[])[]\n\nfunction _getElements(\n  element: HTMLElement | null,\n  elementsArg: ClickOutsideElements,\n): HTMLElement[] {\n  const ret = [element]\n\n  for (const el of elementsArg) {\n    if (Array.isArray(el)) {\n      ret.push(...el)\n    } else {\n      ret.push(el)\n    }\n  }\n\n  return ret.filter(Boolean) as HTMLElement[]\n}\n\n/**\n * @public\n * @deprecated replaced by the new `useClickOutsideEvent` hook, instead of:\n * ```tsx\n * const [button, setButtonElement] = useState(null)\n * useClickOutside((event) => {}, [button])\n * return <button ref={setButtonElement} />\n * ```\n * do:\n * ```tsx\n * const buttonRef = useRef()\n * useClickOutsideEvent((event) => {}, () => [buttonRef.current])\n * return <button ref={buttonRef} />\n * ```\n */\nexport function useClickOutside(\n  listener: ClickOutsideListener,\n  elementsArg: ClickOutsideElements = EMPTY_ARRAY,\n  boundaryElement?: HTMLElement | null,\n): (el: HTMLElement | null) => void {\n  const [element, setElement] = useState<HTMLElement | null>(null)\n  const [elements, setElements] = useState(() => _getElements(element, elementsArg))\n  const elementsRef = useRef(elements)\n\n  useEffect(() => {\n    const prevElements = elementsRef.current\n    const nextElements = _getElements(element, elementsArg)\n\n    if (prevElements.length !== nextElements.length) {\n      setElements(nextElements)\n      elementsRef.current = nextElements\n\n      return\n    }\n\n    for (const el of prevElements) {\n      if (!nextElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n\n    for (const el of nextElements) {\n      if (!prevElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n  }, [element, elementsArg])\n\n  useEffect(() => {\n    if (!listener) return undefined\n\n    const handleWindowMouseDown = (evt: MouseEvent) => {\n      const target = evt.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (boundaryElement && !boundaryElement.contains(target)) {\n        return\n      }\n\n      for (const el of elements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      listener(evt)\n    }\n\n    window.addEventListener('mousedown', handleWindowMouseDown)\n\n    return () => {\n      window.removeEventListener('mousedown', handleWindowMouseDown)\n    }\n  }, [boundaryElement, listener, elements])\n\n  return setElement\n}\n","import {useElementSize} from '../useElementSize'\n\n/**\n * Subscribe to the rect of a DOM element.\n * @beta\n *\n * @deprecated Use `useElementSize` instead\n */\nexport function useElementRect(element: HTMLElement | null): DOMRectReadOnly | null {\n  const elementSize = useElementSize(element)\n\n  return elementSize?._contentRect || null\n}\n","import {useImperativeHandle, useRef} from 'react'\n\n/**\n * @beta\n * @deprecated use `useImperativeHandle` instead\n * @example\n * ```diff\n * -const ref = useForwardedRef(forwardedRef)\n * +const ref = useRef(null)\n * +useImperativeHandle(forwardedRef, () => ref.current)\n * ```\n */\nexport function useForwardedRef<T>(ref: React.ForwardedRef<T>): React.MutableRefObject<T | null> {\n  const innerRef = useRef<T | null>(null)\n\n  useImperativeHandle(ref, () => innerRef.current!)\n\n  return innerRef\n}\n","import {Component, PropsWithChildren} from 'react'\n\nimport {Code} from '../primitives/code'\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport type ErrorBoundaryProps = PropsWithChildren<{\n  onCatch: (params: {error: Error; info: React.ErrorInfo}) => void\n}>\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport interface ErrorBoundaryState {\n  error: Error | null\n}\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  state: ErrorBoundaryState = {error: null}\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI.\n    return {error}\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo): void {\n    this.props.onCatch({error, info})\n  }\n\n  render(): React.ReactNode {\n    const {error} = this.state\n\n    if (error) {\n      const message = typeof error?.message === 'string' ? error.message : 'Error'\n\n      return <Code>{message}</Code>\n    }\n\n    return this.props.children\n  }\n}\n","import {SpinnerIcon} from '@sanity/icons'\nimport {keyframes, styled} from 'styled-components'\n\nimport {Box} from '../../primitives'\n\n/**\n * @internal\n */\nexport const StyledAutocomplete = styled.div`\n  line-height: 0;\n`\n\n/**\n * @internal\n */\nexport const ListBox = styled(Box)`\n  & > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\n/**\n * @internal\n */\nexport const AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n","import {useCallback} from 'react'\n\nimport {_isEnterToClickElement} from '../../helpers'\n\nexport interface AutocompleteOptionProps {\n  children: React.ReactNode\n  id: string\n  onSelect: (v: string) => void\n  selected: boolean\n  value: string\n}\n\nexport function AutocompleteOption(props: AutocompleteOptionProps): React.JSX.Element {\n  const {children, id, onSelect, selected, value} = props\n\n  const handleClick = useCallback(() => {\n    // Calling the `onSelect` in a timeout is a fix to\n    // allow the `click` event to propagate in some cases\n    setTimeout(() => {\n      onSelect(value)\n    }, 0)\n  }, [onSelect, value])\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLLIElement>) => {\n      if (event.key === 'Enter' && !_isEnterToClickElement(event.currentTarget)) {\n        handleClick()\n      }\n    },\n    [handleClick],\n  )\n\n  return (\n    <li\n      aria-selected={selected}\n      data-ui=\"AutocompleteOption\"\n      id={id}\n      role=\"option\"\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n    >\n      {children}\n    </li>\n  )\n}\n","import {AutocompleteMsg, AutocompleteState} from './types'\n\n/**\n * @internal\n */\nexport function autocompleteReducer(\n  state: AutocompleteState,\n  msg: AutocompleteMsg,\n): AutocompleteState {\n  if (msg.type === 'input/change') {\n    return {...state, activeValue: null, focused: true, query: msg.query}\n  }\n\n  if (msg.type === 'input/focus') {\n    return {...state, focused: true}\n  }\n\n  if (msg.type === 'root/blur') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/clear') {\n    return {...state, activeValue: null, query: null, value: null}\n  }\n\n  if (msg.type === 'root/escape') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/open') {\n    return {...state, query: state.query || msg.query}\n  }\n\n  if (msg.type === 'root/setActiveValue') {\n    return {...state, activeValue: msg.value, listFocused: msg.listFocused || state.listFocused}\n  }\n\n  if (msg.type === 'root/setListFocused') {\n    return {...state, listFocused: msg.listFocused}\n  }\n\n  if (msg.type === 'value/change') {\n    return {...state, activeValue: msg.value, query: null, value: msg.value}\n  }\n\n  return state\n}\n","import {Placement} from '../../types'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_LISTBOX_IGNORE_KEYS = [\n  'Control',\n  'Shift',\n  'Alt',\n  'Enter',\n  'Home',\n  'End',\n  'PageUp',\n  'PageDown',\n  'Meta',\n  'Tab',\n  'CapsLock',\n]\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_PLACEMENT: Placement = 'bottom-start'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['bottom-start', 'top-start']\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  ChangeEvent,\n  cloneElement,\n  ElementType,\n  FocusEvent,\n  forwardRef,\n  HTMLProps,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\n\nimport {EMPTY_ARRAY, EMPTY_RECORD} from '../../constants'\nimport {_hasFocus, _raf, focusFirstDescendant} from '../../helpers'\nimport {useArrayProp} from '../../hooks'\nimport {\n  Box,\n  BoxProps,\n  Button,\n  Card,\n  Popover,\n  PopoverProps,\n  Stack,\n  Text,\n  TextInput,\n} from '../../primitives'\nimport {Radius} from '../../types'\nimport {AnimatedSpinnerIcon, ListBox, StyledAutocomplete} from './autocomplete.styles'\nimport {AutocompleteOption} from './autocompleteOption'\nimport {autocompleteReducer} from './autocompleteReducer'\nimport {\n  AUTOCOMPLETE_LISTBOX_IGNORE_KEYS,\n  AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS,\n  AUTOCOMPLETE_POPOVER_PLACEMENT,\n} from './constants'\nimport {AutocompleteOpenButtonProps, BaseAutocompleteOption} from './types'\n\n/**\n * @public\n */\nexport interface AutocompleteProps<Option extends BaseAutocompleteOption = BaseAutocompleteOption> {\n  border?: boolean\n  customValidity?: string\n  filterOption?: (query: string, option: Option) => boolean\n  fontSize?: number | number[]\n  icon?: ElementType | ReactNode\n  id: string\n  /** @beta */\n  listBox?: BoxProps\n  loading?: boolean\n  onChange?: (value: string) => void\n  onQueryChange?: (query: string | null) => void\n  onSelect?: (value: string) => void\n  /** @beta */\n  openButton?: boolean | AutocompleteOpenButtonProps\n  /** @beta */\n  openOnFocus?: boolean\n  /** The options to render. */\n  options?: Option[]\n  padding?: number | number[]\n  popover?: Omit<PopoverProps, 'content' | 'onMouseEnter' | 'onMouseLeave' | 'open'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'ref' | 'width'>\n  prefix?: ReactNode\n  radius?: Radius | Radius[]\n  /** @beta */\n  relatedElements?: HTMLElement[]\n  /** The callback function for rendering each option. */\n  renderOption?: (option: Option) => React.JSX.Element\n  /** @beta */\n  renderPopover?: (\n    props: {\n      content: React.JSX.Element | null\n      hidden: boolean\n      inputElement: HTMLInputElement | null\n      onMouseEnter: () => void\n      onMouseLeave: () => void\n    },\n    ref: Ref<HTMLDivElement>,\n  ) => ReactNode\n  renderValue?: (value: string, option?: Option) => string\n  suffix?: ReactNode\n  /** The current value. */\n  value?: string\n}\n\nconst DEFAULT_RENDER_VALUE = (value: string, option?: BaseAutocompleteOption) =>\n  option ? option.value : value\n\nconst DEFAULT_FILTER_OPTION = (query: string, option: BaseAutocompleteOption) =>\n  option.value.toLowerCase().indexOf(query.toLowerCase()) > -1\n\nconst InnerAutocomplete = forwardRef(function InnerAutocomplete<\n  Option extends BaseAutocompleteOption,\n>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    >,\n  forwardedRef: React.ForwardedRef<HTMLInputElement>,\n) {\n  const {\n    border = true,\n    customValidity,\n    disabled,\n    filterOption: filterOptionProp,\n    fontSize = 2,\n    icon,\n    id,\n    listBox = EMPTY_RECORD,\n    loading,\n    onBlur,\n    onChange,\n    onFocus,\n    onQueryChange,\n    onSelect,\n    openButton,\n    openOnFocus,\n    options: optionsProp,\n    padding: paddingProp = 3,\n    popover = EMPTY_RECORD,\n    prefix,\n    radius = 2,\n    readOnly,\n    relatedElements,\n    renderOption: renderOptionProp,\n    renderPopover,\n    renderValue = DEFAULT_RENDER_VALUE,\n    suffix,\n    value: valueProp,\n    ...restProps\n  } = props\n\n  const [state, dispatch] = useReducer(autocompleteReducer, {\n    activeValue: valueProp || null,\n    focused: false,\n    listFocused: false,\n    query: null,\n    value: valueProp || null,\n  })\n\n  const {activeValue, focused, listFocused, query, value} = state\n\n  const defaultRenderOption = useCallback(\n    ({value}: BaseAutocompleteOption) => (\n      <Card data-as=\"button\" padding={paddingProp} radius={2} tone=\"inherit\">\n        <Text size={fontSize} textOverflow=\"ellipsis\">\n          {value}\n        </Text>\n      </Card>\n    ),\n    [fontSize, paddingProp],\n  )\n\n  const renderOption =\n    typeof renderOptionProp === 'function' ? renderOptionProp : defaultRenderOption\n\n  const filterOption =\n    typeof filterOptionProp === 'function' ? filterOptionProp : DEFAULT_FILTER_OPTION\n\n  // Element refs\n  const rootElementRef = useRef<HTMLDivElement | null>(null)\n  const resultsPopoverElementRef = useRef<HTMLDivElement | null>(null)\n  const inputElementRef = useRef<HTMLInputElement | null>(null)\n  const listBoxElementRef = useRef<HTMLDivElement | null>(null)\n  // Element refs that need to be accessed during render\n  const [inputElement, setInputElement] = useState<HTMLInputElement | null>(null)\n\n  // Value refs\n  const listFocusedRef = useRef(false)\n  const valueRef = useRef(value)\n  const valuePropRef = useRef(valueProp)\n  const popoverMouseWithinRef = useRef(false)\n\n  // Forward inputElement state to inputElementRef\n  useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(\n    inputElementRef,\n    () => inputElement,\n    [inputElement],\n  )\n  // Forward inputElement to parent\n  useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(\n    forwardedRef,\n    () => inputElement,\n    [inputElement],\n  )\n\n  const listBoxId = `${id}-listbox`\n  const options = Array.isArray(optionsProp) ? optionsProp : EMPTY_ARRAY\n  const padding = useArrayProp(paddingProp)\n  const currentOption = useMemo(\n    () => (value !== null ? options.find((o) => o.value === value) : undefined),\n    [options, value],\n  )\n  const filteredOptions = useMemo(\n    () => options.filter((option) => (query ? filterOption(query, option) : true)),\n    [filterOption, options, query],\n  )\n  const filteredOptionsLen = filteredOptions.length\n  const activeItemId = activeValue ? `${id}-option-${activeValue}` : undefined\n  const expanded = (query !== null && loading) || (focused && query !== null)\n\n  const handleRootBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      setTimeout(() => {\n        // NOTE: This is a workaround for a bug that may happen in Chrome (clicking the scrollbar\n        // closes the results in certain situations):\n        // - Do not handle blur if the mouse is within the popover\n        if (popoverMouseWithinRef.current) {\n          return\n        }\n\n        const elements: HTMLElement[] = (relatedElements || []).concat(\n          rootElementRef.current ? [rootElementRef.current] : [],\n          resultsPopoverElementRef.current ? [resultsPopoverElementRef.current] : [],\n        )\n\n        let focusInside = false\n\n        if (document.activeElement) {\n          for (const e of elements) {\n            if (e === document.activeElement || e.contains(document.activeElement)) {\n              focusInside = true\n              break\n            }\n          }\n        }\n\n        if (focusInside === false) {\n          dispatch({type: 'root/blur'})\n          popoverMouseWithinRef.current = false\n          if (onQueryChange) onQueryChange(null)\n          if (onBlur) onBlur(event)\n        }\n      }, 0)\n    },\n    [onBlur, onQueryChange, relatedElements],\n  )\n\n  const handleRootFocus = useCallback((event: FocusEvent<HTMLDivElement>) => {\n    const listBoxElement = listBoxElementRef.current\n    const focusedElement = event.target instanceof HTMLElement ? event.target : null\n    const listFocused = listBoxElement?.contains(focusedElement) || false\n\n    if (listFocused !== listFocusedRef.current) {\n      listFocusedRef.current = listFocused\n\n      dispatch({type: 'root/setListFocused', listFocused})\n    }\n  }, [])\n\n  const handleOptionSelect = useCallback(\n    (v: string) => {\n      dispatch({type: 'value/change', value: v})\n\n      popoverMouseWithinRef.current = false\n\n      if (onSelect) onSelect(v)\n\n      valueRef.current = v\n\n      if (onChange) onChange(v)\n      if (onQueryChange) onQueryChange(null)\n\n      inputElementRef.current?.focus()\n    },\n    [onChange, onSelect, onQueryChange],\n  )\n\n  const handleRootKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLElement>) => {\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption = filteredOptions[(activeIndex + 1) % filteredOptionsLen]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'ArrowUp') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption =\n          filteredOptions[\n            activeIndex === -1\n              ? filteredOptionsLen - 1\n              : (filteredOptionsLen + activeIndex - 1) % filteredOptionsLen\n          ]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'Escape') {\n        dispatch({type: 'root/escape'})\n        popoverMouseWithinRef.current = false\n        if (onQueryChange) onQueryChange(null)\n        inputElementRef.current?.focus()\n\n        return\n      }\n\n      const target = event.target as Node\n      const listEl = listBoxElementRef.current\n\n      if (\n        (listEl === target || listEl?.contains(target)) &&\n        !AUTOCOMPLETE_LISTBOX_IGNORE_KEYS.includes(event.key)\n      ) {\n        inputElementRef.current?.focus()\n\n        return\n      }\n    },\n    [activeValue, filteredOptions, filteredOptionsLen, onQueryChange],\n  )\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const nextQuery = event.currentTarget.value\n\n      dispatch({type: 'input/change', query: nextQuery})\n\n      if (onQueryChange) onQueryChange(nextQuery)\n    },\n    [onQueryChange],\n  )\n\n  const dispatchOpen = useCallback(() => {\n    dispatch({\n      type: 'root/open',\n      query: value ? renderValue(value, currentOption) : '',\n    })\n  }, [currentOption, renderValue, value])\n\n  const handleInputFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      if (!focused) {\n        dispatch({type: 'input/focus'})\n\n        if (onFocus) onFocus(event)\n        if (openOnFocus) dispatchOpen()\n      }\n    },\n    [focused, onFocus, openOnFocus, dispatchOpen],\n  )\n\n  const handlePopoverMouseEnter = useCallback(() => {\n    popoverMouseWithinRef.current = true\n  }, [])\n\n  const handlePopoverMouseLeave = useCallback(() => {\n    popoverMouseWithinRef.current = false\n  }, [])\n\n  const handleClearButtonClick = useCallback(() => {\n    dispatch({type: 'root/clear'})\n    valueRef.current = ''\n    if (onChange) onChange('')\n    if (onQueryChange) onQueryChange(null)\n    inputElementRef.current?.focus()\n  }, [onChange, onQueryChange])\n\n  const handleClearButtonFocus = useCallback(() => {\n    dispatch({type: 'input/focus'})\n  }, [])\n\n  // Change the value when `value` prop changes\n  useEffect(() => {\n    // If `valueProp` changed\n    if (valueProp !== valuePropRef.current) {\n      valuePropRef.current = valueProp\n\n      if (valueProp !== undefined) {\n        dispatch({type: 'value/change', value: valueProp})\n        valueRef.current = valueProp\n      }\n\n      return\n    }\n\n    // If `valueProp` is not equal to `value`\n    if (valueProp !== valueRef.current) {\n      valueRef.current = valueProp || null\n\n      dispatch({type: 'value/change', value: valueProp || null})\n    }\n  }, [valueProp])\n\n  // Reset active item when closing\n  useEffect(() => {\n    if (!focused && valueRef.current) {\n      dispatch({type: 'root/setActiveValue', value: valueRef.current})\n    }\n  }, [focused])\n\n  // Focus the selected item\n  useEffect(() => {\n    const listElement = listBoxElementRef.current\n\n    if (!listElement) return\n\n    const activeOption = filteredOptions.find((o) => o.value === activeValue)\n\n    if (activeOption) {\n      const activeIndex = filteredOptions.indexOf(activeOption)\n      const activeItemElement = listElement.childNodes[activeIndex] as HTMLLIElement | undefined\n\n      if (activeItemElement) {\n        if (_hasFocus(activeItemElement)) {\n          // already focused\n          return\n        }\n\n        focusFirstDescendant(activeItemElement)\n      }\n    }\n  }, [activeValue, filteredOptions])\n\n  const clearButton = useMemo(() => {\n    if (!loading && !disabled && value) {\n      return {\n        'aria-label': 'Clear',\n        'onFocus': handleClearButtonFocus,\n      }\n    }\n\n    return undefined\n  }, [disabled, handleClearButtonFocus, loading, value])\n\n  const openButtonBoxPadding = useMemo(\n    () =>\n      padding.map((v) => {\n        if (v === 0) return 0\n        if (v === 1) return 1\n        if (v === 2) return 1\n\n        return v - 2\n      }),\n    [padding],\n  )\n  const openButtonPadding = useMemo(() => padding.map((v) => Math.max(v - 1, 0)), [padding])\n  const openButtonProps: AutocompleteOpenButtonProps = useMemo(\n    () => (typeof openButton === 'object' ? openButton : EMPTY_RECORD),\n    [openButton],\n  )\n\n  const handleOpenClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      dispatchOpen()\n\n      if (openButtonProps.onClick) openButtonProps.onClick(event)\n\n      _raf(() => inputElementRef.current?.focus())\n    },\n    [openButtonProps, dispatchOpen],\n  )\n\n  const openButtonNode = useMemo(\n    () =>\n      !disabled && !readOnly && openButton ? (\n        <Box aria-hidden={expanded} padding={openButtonBoxPadding}>\n          <Button\n            aria-label=\"Open\"\n            disabled={expanded}\n            fontSize={fontSize}\n            icon={ChevronDownIcon}\n            mode=\"bleed\"\n            padding={openButtonPadding}\n            {...openButtonProps}\n            onClick={handleOpenClick}\n          />\n        </Box>\n      ) : undefined,\n    [\n      disabled,\n      expanded,\n      fontSize,\n      handleOpenClick,\n      openButton,\n      openButtonBoxPadding,\n      openButtonPadding,\n      openButtonProps,\n      readOnly,\n    ],\n  )\n\n  const inputValue = useMemo(() => {\n    if (query === null) {\n      if (value !== null) {\n        return renderValue(value, currentOption)\n      }\n\n      return ''\n    }\n\n    return query\n  }, [currentOption, query, renderValue, value])\n\n  const handleListBoxKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>) => {\n      // If the focus is currently in the list, move focus to the input element\n      if (event.key === 'Tab') {\n        if (listFocused) inputElementRef.current?.focus()\n      }\n    },\n    [listFocused],\n  )\n\n  const content = useMemo(() => {\n    if (filteredOptions.length === 0) return null\n\n    return (\n      <ListBox\n        data-ui=\"AutoComplete__results\"\n        onKeyDown={handleListBoxKeyDown}\n        padding={1}\n        {...listBox}\n        tabIndex={-1}\n      >\n        <Stack\n          as=\"ul\"\n          aria-multiselectable={false}\n          data-ui=\"AutoComplete__resultsList\"\n          id={listBoxId}\n          ref={listBoxElementRef}\n          role=\"listbox\"\n          space={1}\n        >\n          {filteredOptions.map((option) => {\n            const active =\n              activeValue !== null ? option.value === activeValue : currentOption === option\n\n            return (\n              <AutocompleteOption\n                id={`${id}-option-${option.value}`}\n                key={option.value}\n                onSelect={handleOptionSelect}\n                selected={active}\n                value={option.value}\n              >\n                {cloneElement(renderOption(option), {\n                  disabled: loading,\n                  selected: active,\n                  tabIndex: listFocused && active ? 0 : -1,\n                })}\n              </AutocompleteOption>\n            )\n          })}\n        </Stack>\n      </ListBox>\n    )\n  }, [\n    activeValue,\n    currentOption,\n    filteredOptions,\n    handleOptionSelect,\n    handleListBoxKeyDown,\n    id,\n    listBox,\n    listBoxId,\n    listFocused,\n    loading,\n    renderOption,\n  ])\n\n  const results = useMemo(() => {\n    if (renderPopover) {\n      return (\n        <RenderPopover\n          content={content}\n          hidden={!expanded}\n          inputElement={inputElement}\n          onMouseEnter={handlePopoverMouseEnter}\n          onMouseLeave={handlePopoverMouseLeave}\n          resultsPopoverElementRef={resultsPopoverElementRef}\n          renderPopover={renderPopover}\n        />\n      )\n    }\n\n    if (filteredOptionsLen === 0) {\n      return null\n    }\n\n    return (\n      <Popover\n        arrow={false}\n        constrainSize\n        content={content}\n        fallbackPlacements={AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS}\n        matchReferenceWidth\n        onMouseEnter={handlePopoverMouseEnter}\n        onMouseLeave={handlePopoverMouseLeave}\n        open={expanded}\n        overflow=\"auto\"\n        placement={AUTOCOMPLETE_POPOVER_PLACEMENT}\n        portal\n        radius={radius}\n        ref={resultsPopoverElementRef}\n        referenceElement={inputElement}\n        {...popover}\n      />\n    )\n  }, [\n    content,\n    expanded,\n    filteredOptionsLen,\n    handlePopoverMouseEnter,\n    handlePopoverMouseLeave,\n    inputElement,\n    popover,\n    radius,\n    renderPopover,\n  ])\n\n  return (\n    <StyledAutocomplete\n      data-ui=\"Autocomplete\"\n      onBlur={handleRootBlur}\n      onFocus={handleRootFocus}\n      onKeyDown={handleRootKeyDown}\n      ref={rootElementRef}\n    >\n      <TextInput\n        {...restProps}\n        aria-activedescendant={activeItemId}\n        aria-autocomplete=\"list\"\n        aria-expanded={expanded}\n        aria-owns={listBoxId}\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        border={border}\n        clearButton={clearButton}\n        customValidity={customValidity}\n        disabled={disabled}\n        fontSize={fontSize}\n        icon={icon}\n        iconRight={loading && AnimatedSpinnerIcon}\n        id={id}\n        inputMode=\"search\"\n        onChange={handleInputChange}\n        onClear={handleClearButtonClick}\n        onFocus={handleInputFocus}\n        padding={padding}\n        prefix={prefix}\n        radius={radius}\n        readOnly={readOnly}\n        ref={setInputElement}\n        role=\"combobox\"\n        spellCheck={false}\n        suffix={suffix || openButtonNode}\n        value={inputValue}\n      />\n      {results}\n    </StyledAutocomplete>\n  )\n})\n\nfunction RenderPopover({\n  renderPopover,\n  content,\n  hidden,\n  inputElement,\n  onMouseEnter,\n  onMouseLeave,\n  resultsPopoverElementRef,\n}: {\n  renderPopover: Exclude<AutocompleteProps['renderPopover'], undefined>\n  resultsPopoverElementRef: Parameters<Exclude<AutocompleteProps['renderPopover'], undefined>>[1]\n} & Parameters<Exclude<AutocompleteProps['renderPopover'], undefined>>[0]) {\n  return renderPopover(\n    {\n      content,\n      hidden,\n      inputElement,\n      onMouseEnter,\n      onMouseLeave,\n    },\n    resultsPopoverElementRef,\n  )\n}\n\nInnerAutocomplete.displayName = 'ForwardRef(Autocomplete)'\n\n/**\n * The Autocomplete component is typically used for search components.\n * It consists of a text input for writing a query, and properties for rendering suggestions.\n *\n * @public\n */\nexport const Autocomplete = InnerAutocomplete as <Option extends BaseAutocompleteOption>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    > & {\n      ref?: Ref<HTMLInputElement>\n    },\n) => React.JSX.Element\n","import {styled} from 'styled-components'\n\nimport {Button} from '../../primitives'\n\nexport const StyledBreadcrumbs = styled.ol`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  list-style: none;\n  align-items: center;\n  white-space: nowrap;\n  line-height: 0;\n`\n\nexport const ExpandButton = styled(Button)`\n  appearance: none;\n  margin: -4px;\n`\n","import {\n  Children,\n  forwardRef,\n  Fragment,\n  isValidElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {useArrayProp, useClickOutsideEvent} from '../../hooks'\nimport {Box, Popover, Stack, Text} from '../../primitives'\nimport {ExpandButton, StyledBreadcrumbs} from './breadcrumbs.styles'\n\n/**\n * @beta\n */\nexport interface BreadcrumbsProps {\n  maxLength?: number\n  separator?: React.ReactNode\n  space?: number | number[]\n}\n\n/**\n * @beta\n */\nexport const Breadcrumbs = forwardRef(function Breadcrumbs(\n  props: BreadcrumbsProps & Omit<React.HTMLProps<HTMLOListElement>, 'as' | 'ref' | 'type'>,\n  ref: React.ForwardedRef<HTMLOListElement>,\n) {\n  const {children, maxLength, separator, space: spaceRaw = 2, ...restProps} = props\n  const space = useArrayProp(spaceRaw)\n  const [open, setOpen] = useState(false)\n  const expandElementRef = useRef<HTMLButtonElement | null>(null)\n  const popoverElementRef = useRef<HTMLDivElement | null>(null)\n\n  const collapse = useCallback(() => setOpen(false), [])\n  const expand = useCallback(() => setOpen(true), [])\n\n  useClickOutsideEvent(collapse, () => [expandElementRef.current, popoverElementRef.current])\n\n  const rawItems = useMemo(() => Children.toArray(children).filter(isValidElement), [children])\n\n  const items = useMemo(() => {\n    const len = rawItems.length\n\n    if (maxLength && len > maxLength) {\n      const beforeLength = Math.ceil(maxLength / 2)\n      const afterLength = Math.floor(maxLength / 2)\n\n      return [\n        ...rawItems.slice(0, beforeLength - 1),\n        <Popover\n          constrainSize\n          content={\n            <Stack as=\"ol\" overflow=\"auto\" padding={space} space={space}>\n              {rawItems.slice(beforeLength - 1, len - afterLength)}\n            </Stack>\n          }\n          key=\"button\"\n          open={open}\n          placement=\"top\"\n          portal\n          ref={popoverElementRef}\n        >\n          <ExpandButton\n            fontSize={1}\n            mode=\"bleed\"\n            onClick={open ? collapse : expand}\n            padding={1}\n            ref={expandElementRef}\n            selected={open}\n            text=\"…\"\n          />\n        </Popover>,\n        ...rawItems.slice(len - afterLength),\n      ]\n    }\n\n    return rawItems\n  }, [collapse, expand, maxLength, open, rawItems, space])\n\n  return (\n    <StyledBreadcrumbs data-ui=\"Breadcrumbs\" {...restProps} ref={ref}>\n      {items.map((item, itemIndex) => (\n        <Fragment key={itemIndex}>\n          {itemIndex > 0 && (\n            <Box aria-hidden as=\"li\" paddingX={space}>\n              {separator || <Text muted>/</Text>}\n            </Box>\n          )}\n          <Box as=\"li\">{item}</Box>\n        </Fragment>\n      ))}\n    </StyledBreadcrumbs>\n  )\n})\nBreadcrumbs.displayName = 'ForwardRef(Breadcrumbs)'\n","import {CSSObject, getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {_responsive, ThemeProps} from '../../styles'\nimport {DialogPosition} from '../../types'\n\n/**\n * @internal\n */\nexport interface ResponsiveDialogPositionStyleProps {\n  $position: DialogPosition[]\n}\n\nexport function dialogStyle({theme}: ThemeProps): CSSObject {\n  const {color} = getTheme_v2(theme)\n\n  return {\n    '&:not([hidden])': {\n      display: 'flex',\n    },\n\n    'top': 0,\n    'left': 0,\n    'right': 0,\n    'bottom': 0,\n    'alignItems': 'center',\n    'justifyContent': 'center',\n    'outline': 'none',\n    'background': color.backdrop,\n  }\n}\n\nexport function responsiveDialogPositionStyle(\n  props: ResponsiveDialogPositionStyleProps & ThemeProps,\n): CSSObject[] {\n  const {media} = getTheme_v2(props.theme)\n\n  return _responsive(media, props.$position, (position) => ({'&&': {position}}))\n}\n\n/**\n * @internal\n */\nexport interface AnimationDialogStyleProps {\n  $animate: boolean\n}\n\nexport function animationDialogStyle(props: AnimationDialogStyleProps): ReturnType<typeof css> {\n  if (!props.$animate) return css``\n\n  return css`\n    @keyframes zoomIn {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    animation: fadeIn 200ms ease-out;\n    // Animates the dialog card.\n    & > [data-ui='DialogCard'] {\n      animation: zoomIn 200ms ease-out;\n    }\n  `\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {DialogPosition} from '../../types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogContextValue {\n  version: 0.0\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * @internal\n */\nexport const DialogContext = createGlobalScopedContext<DialogContextValue>(\n  '@sanity/ui/context/dialog',\n  {version: 0.0},\n)\n","import {useContext} from 'react'\n\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function useDialog(): DialogContextValue {\n  return useContext(DialogContext)\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {forwardRef, useCallback, useEffect, useImperativeHandle, useRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {\n  containsOrEqualsElement,\n  focusFirstDescendant,\n  focusLastDescendant,\n  isHTMLElement,\n} from '../../helpers'\nimport {\n  useArrayProp,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  usePrefersReducedMotion,\n} from '../../hooks'\nimport {Box, Button, Card, Container, Flex, Text} from '../../primitives'\nimport {ResponsivePaddingProps, ResponsiveWidthProps} from '../../primitives/types'\nimport {responsivePaddingStyle, ResponsivePaddingStyleProps} from '../../styles/internal'\nimport {useTheme_v2} from '../../theme'\nimport {DialogPosition, Radius} from '../../types'\nimport {Layer, LayerProps, Portal, useBoundaryElement, useLayer, usePortal} from '../../utils'\nimport {\n  animationDialogStyle,\n  AnimationDialogStyleProps,\n  dialogStyle,\n  responsiveDialogPositionStyle,\n  ResponsiveDialogPositionStyleProps,\n} from './styles'\nimport {useDialog} from './useDialog'\n\n/**\n * @public\n */\nexport interface DialogProps extends ResponsivePaddingProps, ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus?: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton?: boolean\n  cardRadius?: Radius | Radius[]\n  cardShadow?: number | number[]\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer?: React.ReactNode\n  header?: React.ReactNode\n  id: string\n  /** A callback that fires when the dialog becomes the top layer when it was not the top layer before. */\n  onActivate?: LayerProps['onActivate']\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  position?: DialogPosition | DialogPosition[]\n  scheme?: ThemeColorSchemeKey\n  zOffset?: number | number[]\n  /**\n   * Whether the dialog should animate in on mount.\n   *\n   * @beta\n   * @defaultValue false\n   */\n  animate?: boolean\n}\n\ninterface DialogCardProps extends ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton: boolean\n  children: React.ReactNode\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer: React.ReactNode\n  header: React.ReactNode\n  id: string\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  radius: Radius | Radius[]\n  scheme?: ThemeColorSchemeKey\n  shadow: number | number[]\n}\n\nfunction isTargetWithinScope(\n  boundaryElement: HTMLElement | null,\n  portalElement: HTMLElement | null,\n  target: Node,\n): boolean {\n  if (!boundaryElement || !portalElement) return true\n\n  return (\n    containsOrEqualsElement(boundaryElement, target) ||\n    containsOrEqualsElement(portalElement, target)\n  )\n}\n\nconst StyledDialog = styled(Layer)<\n  ResponsiveDialogPositionStyleProps & ResponsivePaddingStyleProps & AnimationDialogStyleProps\n>(responsivePaddingStyle, dialogStyle, responsiveDialogPositionStyle, animationDialogStyle)\n\nconst DialogContainer = styled(Container)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst DialogCardRoot = styled(Card)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  min-height: 0;\n  max-height: 100%;\n  overflow: hidden;\n  overflow: clip;\n`\n\nconst DialogLayout = styled(Flex)`\n  flex: 1;\n  min-height: 0;\n  width: 100%;\n`\n\nconst DialogHeader = styled(Box)`\n  position: relative;\n  z-index: 2;\n`\n\nconst DialogContent = styled(Box)`\n  position: relative;\n  z-index: 1;\n  overflow: auto;\n  outline: none;\n`\n\nconst DialogFooter = styled(Box)`\n  position: relative;\n  z-index: 3;\n`\n\nconst DialogCard = forwardRef(function DialogCard(\n  props: DialogCardProps,\n  forwardedRef: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    __unstable_autoFocus: autoFocus,\n    __unstable_hideCloseButton: hideCloseButton,\n    children,\n    contentRef: forwardedContentRef,\n    footer,\n    header,\n    id,\n    onClickOutside,\n    onClose,\n    portal: portalProp,\n    radius: radiusProp,\n    scheme,\n    shadow: shadowProp,\n    width: widthProp,\n  } = props\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const radius = useArrayProp(radiusProp)\n  const shadow = useArrayProp(shadowProp)\n  const width = useArrayProp(widthProp)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const contentRef = useRef<HTMLDivElement | null>(null)\n  const layer = useLayer()\n  const {isTopLayer} = layer\n  const labelId = `${id}_label`\n  const showCloseButton = Boolean(onClose) && hideCloseButton === false\n  const showHeader = Boolean(header) || showCloseButton\n\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n    forwardedContentRef,\n    () => contentRef.current,\n  )\n\n  useEffect(() => {\n    if (!autoFocus) return\n\n    // On mount: focus the first focusable element\n    if (ref.current) {\n      focusFirstDescendant(ref.current)\n    }\n  }, [autoFocus, ref])\n\n  useGlobalKeyDown(\n    useCallback(\n      (event: KeyboardEvent) => {\n        if (!isTopLayer || !onClose) return\n\n        const target = document.activeElement\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore key presses when the focused element is outside of scope\n          return\n        }\n\n        if (event.key === 'Escape') {\n          event.preventDefault()\n          event.stopPropagation()\n          onClose()\n        }\n      },\n      [boundaryElement, isTopLayer, onClose, portalElement],\n    ),\n  )\n\n  useClickOutsideEvent(\n    isTopLayer &&\n      onClickOutside &&\n      ((event) => {\n        const target = event.target as Node | null\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore clicks outside of the scope\n          return\n        }\n\n        onClickOutside()\n      }),\n    () => [ref.current],\n  )\n\n  return (\n    <DialogContainer data-ui=\"DialogCard\" width={width}>\n      <DialogCardRoot radius={radius} ref={ref} scheme={scheme} shadow={shadow}>\n        <DialogLayout direction=\"column\">\n          {showHeader && (\n            <DialogHeader>\n              <Flex align=\"flex-start\" padding={3}>\n                <Box flex={1} padding={2}>\n                  {header && (\n                    <Text id={labelId} size={1} weight=\"semibold\">\n                      {header}\n                    </Text>\n                  )}\n                </Box>\n                {showCloseButton && (\n                  <Box flex=\"none\">\n                    <Button\n                      aria-label=\"Close dialog\"\n                      disabled={!onClose}\n                      icon={CloseIcon}\n                      mode=\"bleed\"\n                      onClick={onClose}\n                      padding={2}\n                    />\n                  </Box>\n                )}\n              </Flex>\n            </DialogHeader>\n          )}\n\n          <DialogContent flex={1} ref={contentRef} tabIndex={-1}>\n            {children}\n          </DialogContent>\n\n          {footer && <DialogFooter>{footer}</DialogFooter>}\n        </DialogLayout>\n      </DialogCardRoot>\n    </DialogContainer>\n  )\n})\n\nDialogCard.displayName = 'ForwardRef(DialogCard)'\n\n/**\n * The Dialog component.\n *\n * @public\n */\nexport const Dialog = forwardRef(function Dialog(\n  props: DialogProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'id' | 'width'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const dialog = useDialog()\n  const {layer} = useTheme_v2()\n  const {\n    __unstable_autoFocus: autoFocus = true,\n    __unstable_hideCloseButton: hideCloseButton = false,\n    cardRadius: cardRadiusProp = 4,\n    cardShadow = 3,\n    children,\n    contentRef,\n    footer,\n    header,\n    id,\n    onActivate,\n    onClickOutside,\n    onClose,\n    onFocus,\n    padding: paddingProp = 3,\n    portal: portalProp,\n    position: _positionProp,\n    scheme,\n    width: widthProp = 0,\n    zOffset: _zOffsetProp,\n    animate: _animate = false,\n    ...restProps\n  } = props\n  const positionProp = _positionProp ?? (dialog.position || 'fixed')\n  const zOffsetProp = _zOffsetProp ?? (dialog.zOffset || layer.dialog.zOffset)\n  const prefersReducedMotion = usePrefersReducedMotion()\n  const animate = prefersReducedMotion ? false : _animate\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const cardRadius = useArrayProp(cardRadiusProp)\n  const padding = useArrayProp(paddingProp)\n  const position = useArrayProp(positionProp)\n  const width = useArrayProp(widthProp)\n  const zOffset = useArrayProp(zOffsetProp)\n  const preDivRef = useRef<HTMLDivElement | null>(null)\n  const postDivRef = useRef<HTMLDivElement | null>(null)\n  const cardRef = useRef<HTMLDivElement | null>(null)\n  const focusedElementRef = useRef<HTMLElement | null>(null)\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLDivElement>) => {\n      onFocus?.(event)\n\n      const target = event.target\n      const cardElement = cardRef.current\n\n      if (cardElement && target === preDivRef.current) {\n        focusLastDescendant(cardElement)\n\n        return\n      }\n\n      if (cardElement && target === postDivRef.current) {\n        focusFirstDescendant(cardElement)\n\n        return\n      }\n\n      if (isHTMLElement(event.target)) {\n        focusedElementRef.current = event.target\n      }\n    },\n    [onFocus],\n  )\n\n  const labelId = `${id}_label`\n\n  const rootClickTimeoutRef = useRef<NodeJS.Timeout>(undefined)\n\n  // If the resulting active element (a.k.a. focused element) is not withing scope when clicking\n  // within the dialog, then we want to focus the previously interactive element in the dialog instead.\n  // This is to allow the user to tab or close the dialog by pressing escape.\n  const handleRootClick = useCallback(() => {\n    if (rootClickTimeoutRef.current) {\n      clearTimeout(rootClickTimeoutRef.current)\n    }\n\n    rootClickTimeoutRef.current = setTimeout(() => {\n      const activeElement = document.activeElement\n\n      if (activeElement && !isTargetWithinScope(boundaryElement, portalElement, activeElement)) {\n        const target = focusedElementRef.current\n\n        if (!target || !document.body.contains(target)) {\n          // No previously focused element, or it's not in the document anymore\n          const cardElement = cardRef.current\n          if (cardElement) focusFirstDescendant(cardElement)\n\n          return\n        }\n\n        target.focus()\n      }\n    }, 0)\n  }, [boundaryElement, portalElement])\n\n  return (\n    <Portal __unstable_name={portalProp}>\n      <StyledDialog\n        {...restProps}\n        $animate={animate}\n        $padding={padding}\n        $position={position}\n        aria-labelledby={labelId}\n        aria-modal\n        data-ui=\"Dialog\"\n        id={id}\n        onActivate={onActivate}\n        onClick={handleRootClick}\n        onFocus={handleFocus}\n        ref={ref}\n        role=\"dialog\"\n        zOffset={zOffset}\n      >\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={preDivRef} tabIndex={0} />\n        <DialogCard\n          __unstable_autoFocus={autoFocus}\n          __unstable_hideCloseButton={hideCloseButton}\n          contentRef={contentRef}\n          footer={footer}\n          header={header}\n          id={id}\n          onClickOutside={onClickOutside}\n          onClose={onClose}\n          portal={portalProp}\n          radius={cardRadius}\n          ref={cardRef}\n          scheme={scheme}\n          shadow={cardShadow}\n          width={width}\n        >\n          {children}\n        </DialogCard>\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={postDivRef} tabIndex={0} />\n      </StyledDialog>\n    </Portal>\n  )\n})\nDialog.displayName = 'ForwardRef(Dialog)'\n","import {useMemo} from 'react'\n\nimport {DialogPosition} from '../../types'\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogProviderProps {\n  children?: React.ReactNode\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function DialogProvider(props: DialogProviderProps): React.JSX.Element {\n  const {children, position, zOffset} = props\n\n  const contextValue: DialogContextValue = useMemo(\n    () => ({\n      version: 0.0,\n      position,\n      zOffset,\n    }),\n    [position, zOffset],\n  )\n\n  return <DialogContext.Provider value={contextValue}>{children}</DialogContext.Provider>\n}\n\nDialogProvider.displayName = 'DialogProvider'\n","import {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {\n  cloneElement,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Popover, PopoverProps} from '../../primitives'\nimport {Placement, Radius} from '../../types'\nimport {MenuProps} from './menu'\n\n/**\n * @public\n */\nexport interface MenuButtonProps {\n  /**\n   * @beta Do not use in production.\n   */\n  __unstable_disableRestoreFocusOnClose?: boolean\n  /**\n   * @deprecated Use `popover={{boundaryElement: element}}` instead.\n   */\n  boundaryElement?: HTMLElement\n  button: React.JSX.Element\n  id: string\n  menu?: React.JSX.Element\n  onClose?: () => void\n  onOpen?: () => void\n  /**\n   * @deprecated Use `popover={{placement: 'top'}}` instead.\n   */\n  placement?: Placement\n  popover?: Omit<PopoverProps, 'content' | 'open'>\n  /**\n   * @deprecated Use `popover={{scheme: 'dark'}}` instead.\n   */\n  popoverScheme?: ThemeColorSchemeKey\n  /**\n   * @deprecated Use `popover={{radius: 2}}` instead.\n   */\n  popoverRadius?: Radius | Radius[]\n  /**\n   * @beta Do not use in production.\n   * @deprecated Use `popover={{portal: true}}` instead.\n   */\n  portal?: boolean\n  /**\n   * @deprecated Use `popover={{preventOverflow: true}}` instead.\n   */\n  preventOverflow?: boolean\n}\n\n/**\n * The `MenuButton` component follows the WAI-ARIA specification for menu buttons.\n *\n * @public\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  forwardedRef: React.ForwardedRef<HTMLButtonElement | null>,\n) {\n  const {\n    __unstable_disableRestoreFocusOnClose: disableRestoreFocusOnClose = false,\n    boundaryElement: deprecated_boundaryElement,\n    button: buttonProp,\n    id,\n    menu: menuProp,\n    onClose,\n    onOpen,\n    placement: deprecated_placement,\n    popoverScheme: deprecated_popoverScheme,\n    portal: deprecated_portal = true,\n    popover,\n    popoverRadius: deprecated_popoverRadius,\n    preventOverflow: deprecated_preventOverflow,\n  } = props\n  const [open, setOpen] = useState(false)\n  const [shouldFocus, setShouldFocus] = useState<'first' | 'last' | null>(null)\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n  const [menuElements, setChildMenuElements] = useState<HTMLElement[]>([])\n  const openRef = useRef<boolean>(open)\n\n  // Notify consumers when the menu opens\n  useEffect(() => {\n    if (onOpen && open && !openRef.current) {\n      onOpen()\n    }\n  }, [onOpen, open])\n\n  // Notify consumers when the menu closes\n  useEffect(() => {\n    if (onClose && !open && openRef.current) {\n      onClose()\n    }\n  }, [onClose, open])\n\n  useEffect(() => {\n    openRef.current = open\n  }, [open])\n\n  const handleButtonClick = useCallback(() => {\n    setOpen((v) => !v)\n    setShouldFocus(null)\n  }, [])\n\n  // Prevent mouse event propagation when the menu is open.\n  // This is to ensure that `handleBlur` isn't triggered when clicking the menu button whilst open,\n  // which can lead to `setOpen` being triggered multiple times (once by `handleBlur`, and again by `handleButtonClick`).\n  const handleMouseDown = useCallback(\n    (event: PointerEvent) => {\n      if (open) event.preventDefault()\n    },\n    [open],\n  )\n\n  const handleButtonKeyDown = useCallback((event: React.KeyboardEvent<HTMLButtonElement>) => {\n    // On `ArrowDown`, `Enter` and `Space`\n    // - Opens menu and moves focus to first menuitem\n    if (event.key === 'ArrowDown' || event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('first')\n\n      return\n    }\n\n    // On `ArrowUp`\n    // - \tOpens menu and moves focus to last menuitem\n    if (event.key === 'ArrowUp') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('last')\n\n      return\n    }\n  }, [])\n\n  const handleMenuClickOutside = useCallback(\n    (event: MouseEvent) => {\n      const target = event.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (buttonElement && (target === buttonElement || buttonElement.contains(target))) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [buttonElement, menuElements],\n  )\n\n  const handleMenuEscape = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const handleBlur = useCallback(\n    (event: FocusEvent) => {\n      const target = event.relatedTarget\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (el === target || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [menuElements],\n  )\n\n  const handleItemClick = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const registerElement = useCallback((el: HTMLElement) => {\n    setChildMenuElements((els) => els.concat([el]))\n\n    return () => setChildMenuElements((els) => els.filter((_el) => _el !== el))\n  }, [])\n\n  const menuProps: MenuProps = {\n    'aria-labelledby': id,\n    'onBlurCapture': handleBlur,\n    'onClickOutside': handleMenuClickOutside,\n    'onEscape': handleMenuEscape,\n    'onItemClick': handleItemClick,\n    'originElement': buttonElement,\n    registerElement,\n    shouldFocus,\n  }\n\n  const menu = menuProp && cloneElement(menuProp, menuProps)\n\n  const button = useMemo(\n    () =>\n      buttonProp &&\n      cloneElement(buttonProp, {\n        'data-ui': 'MenuButton',\n        id,\n        'onClick': handleButtonClick,\n        'onKeyDown': handleButtonKeyDown,\n        'onMouseDown': handleMouseDown,\n        'aria-haspopup': true,\n        'aria-expanded': open,\n        'ref': setButtonElement,\n        'selected': buttonProp.props.selected ?? open,\n      }),\n    [buttonProp, handleButtonClick, handleButtonKeyDown, handleMouseDown, id, open],\n  )\n\n  // Forward button ref to parent\n  useImperativeHandle<HTMLButtonElement | null, HTMLButtonElement | null>(\n    forwardedRef,\n    () => buttonElement,\n    [buttonElement],\n  )\n\n  const popoverProps: MenuButtonProps['popover'] = useMemo(\n    () => ({\n      boundaryElement: deprecated_boundaryElement,\n      overflow: 'auto',\n      placement: deprecated_placement,\n      portal: deprecated_portal,\n      preventOverflow: deprecated_preventOverflow,\n      radius: deprecated_popoverRadius,\n      scheme: deprecated_popoverScheme,\n      ...(popover || {}),\n    }),\n    [\n      deprecated_boundaryElement,\n      deprecated_placement,\n      deprecated_popoverRadius,\n      deprecated_popoverScheme,\n      deprecated_portal,\n      deprecated_preventOverflow,\n      popover,\n    ],\n  )\n\n  return (\n    <Popover data-ui=\"MenuButton__popover\" {...popoverProps} content={menu} open={open}>\n      {button || <></>}\n    </Popover>\n  )\n})\nMenuButton.displayName = 'ForwardRef(MenuButton)'\n","import {css, keyframes} from 'styled-components'\n\nconst keyframe = keyframes`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`\n\nconst animation = css`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${keyframe};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const skeletonStyle = css<{$animated: boolean; $visible: boolean}>`\n  opacity: ${({$visible}) => ($visible ? 1 : 0)};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({$animated}) =>\n      $animated\n        ? animation\n        : css`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`\n","import {forwardRef, useEffect, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {useArrayProp} from '../../hooks'\nimport {Box, BoxProps, ResponsiveRadiusProps} from '../../primitives'\nimport {responsiveRadiusStyle, ResponsiveRadiusStyleProps} from '../../styles/internal'\nimport {skeletonStyle} from './styles'\n\nconst StyledSkeleton = styled(Box)<\n  {$animated: boolean; $visible: boolean} & ResponsiveRadiusStyleProps\n>(responsiveRadiusStyle, skeletonStyle)\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface SkeletonProps extends ResponsiveRadiusProps, Omit<BoxProps, 'children'> {\n  animated?: boolean\n  delay?: number\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Skeleton = forwardRef(function Skeleton(\n  props: SkeletonProps & React.HTMLProps<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {animated = false, delay, radius, ...restProps} = props\n  const [visible, setVisible] = useState<boolean>(delay ? false : true)\n\n  useEffect(() => {\n    if (!delay) {\n      return setVisible(true)\n    }\n\n    const timeout = setTimeout(() => {\n      setVisible(true)\n    }, delay)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [delay])\n\n  return (\n    <StyledSkeleton\n      {...restProps}\n      $animated={animated}\n      $radius={useArrayProp(radius)}\n      $visible={visible}\n      ref={ref}\n    />\n  )\n})\nSkeleton.displayName = 'ForwardRef(Skeleton)'\n","import {getTheme_v2, ThemeFontKey} from '@sanity/ui/theme'\nimport {forwardRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {useArrayProp} from '../../hooks'\nimport {_responsive, ThemeProps} from '../../styles'\nimport {Skeleton, SkeletonProps} from './skeleton'\n\nconst StyledSkeleton = styled(Skeleton)<{$size: number[]; $style: ThemeFontKey}>((\n  props: {\n    $size: number[]\n    $style: ThemeFontKey\n  } & ThemeProps,\n) => {\n  const {$size, $style} = props\n  const {font, media} = getTheme_v2(props.theme)\n  const fontStyle = font[$style]\n\n  const styles = _responsive(media, $size, (sizeIndex) => {\n    const fontSize = fontStyle.sizes[sizeIndex]\n    const capHeight = fontSize.lineHeight - fontSize.ascenderHeight - fontSize.descenderHeight\n\n    return {height: capHeight}\n  })\n\n  return styles\n})\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TextSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface LabelSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface HeadingSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface CodeSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const TextSkeleton = forwardRef(function TextSkeleton(\n  props: TextSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"text\" />\n})\nTextSkeleton.displayName = 'ForwardRef(TextSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const LabelSkeleton = forwardRef(function TextSkeleton(\n  props: LabelSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"label\" />\n})\nLabelSkeleton.displayName = 'ForwardRef(LabelSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const HeadingSkeleton = forwardRef(function TextSkeleton(\n  props: HeadingSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"heading\" />\n})\nHeadingSkeleton.displayName = 'ForwardRef(HeadingSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const CodeSkeleton = forwardRef(function TextSkeleton(\n  props: CodeSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = useArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"code\" />\n})\nCodeSkeleton.displayName = 'ForwardRef(CodeSkeleton)'\n","import {forwardRef} from 'react'\n\nimport {Box, BoxProps} from '../../primitives'\n\n/**\n * @public\n */\nexport interface TabPanelProps extends BoxProps {\n  /**\n   * The `id` of the correlating `Tab` component.\n   */\n  'aria-labelledby': string\n  'id': string\n}\n\n/**\n * @public\n */\nexport const TabPanel = forwardRef(function TabPanel(\n  props: TabPanelProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'aria-labelledby' | 'id' | 'role'>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {flex, ...restProps} = props\n\n  return (\n    <Box\n      data-ui=\"TabPanel\"\n      {...restProps}\n      flex={flex}\n      ref={ref}\n      role=\"tabpanel\"\n      tabIndex={props.tabIndex === undefined ? 0 : props.tabIndex}\n    >\n      {props.children}\n    </Box>\n  )\n})\nTabPanel.displayName = 'ForwardRef(TabPanel)'\n","import {getTheme_v2, ThemeColorStateToneKey} from '@sanity/ui/theme'\nimport {styled} from 'styled-components'\n\nimport {Card, Flex} from '../../primitives'\nimport type {ButtonTone} from '../../types'\n\nconst LOADING_BAR_HEIGHT = 2\n\nexport const STATUS_CARD_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ThemeColorStateToneKey}\n\nexport const BUTTON_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ButtonTone}\n\nexport const TextBox = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport const StyledToast = styled(Card)`\n  pointer-events: all;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  overflow: clip;\n\n  &[data-has-duration] {\n    padding-bottom: calc(${LOADING_BAR_HEIGHT}px / 2);\n  }\n`\n\nexport const LoadingBar = styled.div`\n  display: flex;\n  position: absolute;\n  bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n  overflow: clip;\n  background: transparent;\n  align-items: flex-end;\n  will-change: opacity;\n`\n\nexport const LoadingBarMask = styled(Card)`\n  position: absolute;\n  top: 0;\n  left: -${LOADING_BAR_HEIGHT}px;\n  right: -${LOADING_BAR_HEIGHT}px;\n  bottom: ${LOADING_BAR_HEIGHT}px;\n  z-index: 1;\n`\n\ntype LoadingBarProgressProps = Omit<React.ComponentProps<typeof Card>, 'tone'> & {\n  tone: ThemeColorStateToneKey\n}\nexport const LoadingBarProgress = styled<React.ComponentType<LoadingBarProgressProps>>(Card)`\n  display: block;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0% 50%;\n  background-color: ${(props) => {\n    const {color} = getTheme_v2(props.theme)\n\n    return color.button.default[props.tone].enabled.bg\n  }};\n`\n","import {CloseIcon} from '@sanity/icons'\nimport {motion, type Variant, type Variants} from 'framer-motion'\n\nimport {usePrefersReducedMotion} from '../../hooks/usePrefersReducedMotion'\nimport {Box, Button, Flex, Stack, Text} from '../../primitives'\nimport {\n  BUTTON_TONE,\n  LoadingBar,\n  LoadingBarMask,\n  LoadingBarProgress,\n  STATUS_CARD_TONE,\n  StyledToast,\n  TextBox,\n} from './styles'\n\n/**\n * @public\n */\nexport interface ToastProps {\n  closable?: boolean\n  description?: React.ReactNode\n  onClose: () => void\n  radius?: number | number[]\n  title?: React.ReactNode\n  status?: 'error' | 'warning' | 'success' | 'info'\n  duration?: number\n  updatedAt?: number\n}\n\nconst ROLES = {\n  error: 'alert',\n  warning: 'alert',\n  success: 'alert',\n  info: 'alert',\n} as const\n\n// Support pattern used by Sanity Studio, that works around the lack of `duration: Infinity` support in older @sanity/ui versions\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * The `Toast` component gives feedback to users when an action has taken place.\n *\n * Toasts can be closed with a close button, or auto-dismiss after a certain timeout.\n *\n * @public\n */\nexport function Toast(\n  props: ToastProps &\n    Omit<\n      React.HTMLProps<HTMLDivElement>,\n      | 'as'\n      | 'height'\n      | 'ref'\n      | 'title'\n      | 'onAnimationStart'\n      | 'onDragStart'\n      | 'onDragEnd'\n      | 'onDrag'\n    >,\n): React.JSX.Element {\n  const {\n    closable,\n    description,\n    duration,\n    onClose,\n    radius = 3,\n    title,\n    status,\n    updatedAt,\n    ...restProps\n  } = props\n  const cardTone = status ? STATUS_CARD_TONE[status] : 'default'\n  const buttonTone = status ? BUTTON_TONE[status] : 'default'\n  const role = status ? ROLES[status] : 'status'\n\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const visualDuration: number = prefersReducedMotion ? 0 : 0.26\n  const transition = visualDuration\n    ? {type: 'spring' as const, visualDuration, bounce: 0.25}\n    : {duration: 0}\n\n  const hasDuration = duration && isFinite(duration) && duration < LONG_ENOUGH_BUT_NOT_TOO_LONG\n  const initial: ContainerVariants[] = ['hidden', 'initial']\n  const animate: ContainerVariants[] = ['visible', 'slideIn']\n  const exit: ContainerVariants[] = ['hidden', 'slideOut']\n\n  return (\n    <MotionToast\n      data-ui=\"Toast\"\n      role={role}\n      {...restProps}\n      data-has-duration={hasDuration ? '' : undefined}\n      custom={visualDuration}\n      radius={radius}\n      shadow={2}\n      tone={cardTone}\n      forwardedAs=\"li\"\n      layout=\"position\"\n      variants={container}\n      initial={initial}\n      animate={animate}\n      exit={exit}\n      transition={transition}\n    >\n      <MotionFlex align=\"flex-start\" variants={content} transition={transition}>\n        <TextBox flex={1} padding={3}>\n          <Stack space={3}>\n            {title && (\n              <Text size={1} weight=\"medium\">\n                {title}\n              </Text>\n            )}\n            {description && (\n              <MotionText muted size={1} variants={content} transition={transition}>\n                {description}\n              </MotionText>\n            )}\n          </Stack>\n        </TextBox>\n\n        {closable && (\n          <Box padding={1}>\n            <Button\n              as=\"button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              padding={2}\n              tone={buttonTone}\n              onClick={onClose}\n              style={{verticalAlign: 'top'}}\n            />\n          </Box>\n        )}\n      </MotionFlex>\n      {hasDuration && (\n        <MotionLoadingBar variants={content} transition={transition}>\n          <LoadingBarMask tone={cardTone} radius={radius} />\n          <MotionLoadingBarProgress\n            key={`progress-${updatedAt}`}\n            tone={cardTone}\n            initial={{scaleX: 0}}\n            animate={{scaleX: 1}}\n            transition={{delay: visualDuration, duration: duration / 1_000, ease: 'linear'}}\n            onAnimationComplete={onClose}\n          />\n        </MotionLoadingBar>\n      )}\n    </MotionToast>\n  )\n}\n\nToast.displayName = 'Toast'\n\nconst container = {\n  initial: {y: 32, scale: 0.5, zIndex: 1},\n  hidden: {opacity: 0},\n  visible: (visualDuration: number) => {\n    if (!visualDuration) return {opacity: 1}\n\n    return {\n      opacity: 1,\n      transition: {\n        when: 'beforeChildren',\n        staggerChildren: visualDuration / 3,\n        duration: visualDuration / 3,\n      },\n    }\n  },\n  slideIn: {\n    y: 0,\n    scale: 1,\n  },\n  slideOut: {\n    zIndex: 0,\n    scale: 0.75,\n  },\n} satisfies Variants\ntype ContainerVariants = keyof typeof container\n\nconst content = {\n  initial: {\n    willChange: 'transform',\n  },\n  hidden: {\n    opacity: 0,\n  },\n  visible: {\n    opacity: 1,\n  },\n} satisfies Partial<Record<ContainerVariants, Variant>>\n\nconst MotionToast = motion.create(StyledToast)\nconst MotionFlex = motion.create(Flex)\nconst MotionText = motion.create(Text)\nconst MotionLoadingBar = motion.create(LoadingBar)\nconst MotionLoadingBarProgress = motion.create(LoadingBarProgress)\n","import {useSyncExternalStore} from 'react'\n\n/**\n * Some components should only render after mounting to the DOM, and not be rendered at all during SSR renderToString or equivalent.\n * @public\n */\nexport function useMounted(): boolean {\n  return useSyncExternalStore(\n    subscribe,\n    () => true,\n    () => false,\n  )\n}\n\nconst subscribe = () => () => {}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {ToastContextValue} from './types'\n\nexport const ToastContext = createGlobalScopedContext<ToastContextValue | null>(\n  '@sanity/ui/context/toast',\n  null,\n)\n","import {styled} from 'styled-components'\n\nimport {Grid} from '../../primitives/grid'\nimport {useLayer} from '../../utils'\n\n/**\n * @public\n */\nexport interface ToastLayerProps {\n  children: React.ReactNode\n  padding?: number | number[]\n  paddingX?: number | number[]\n  paddingY?: number | number[]\n  gap?: number | number[]\n}\n\n/**\n * @internal\n */\nexport function ToastLayer(props: ToastLayerProps): React.JSX.Element {\n  const {children, padding = 4, paddingX, paddingY, gap = 3} = props\n  const {zIndex} = useLayer()\n\n  return (\n    <StyledLayer\n      forwardedAs=\"ul\"\n      data-ui=\"ToastProvider\"\n      padding={padding}\n      paddingX={paddingX}\n      paddingY={paddingY}\n      gap={gap}\n      columns={1}\n      style={{zIndex}}\n    >\n      {children}\n    </StyledLayer>\n  )\n}\n\nToastLayer.displayName = 'ToastLayer'\n\nconst StyledLayer = styled(Grid)`\n  box-sizing: border-box;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  list-style: none;\n  pointer-events: none;\n  max-width: 420px;\n  width: 100%;\n`\n","let toastId = 0\n\n/** @internal */\nexport function generateToastId(): string {\n  return String(toastId++)\n}\n","import {AnimatePresence} from 'framer-motion'\nimport {startTransition, useMemo, useState} from 'react'\n\nimport {useMounted} from '../../hooks/useMounted'\nimport {LayerProvider} from '../../utils'\nimport {Toast} from './toast'\nimport {ToastContext} from './toastContext'\nimport {ToastLayer, type ToastLayerProps} from './toastLayer'\nimport {generateToastId} from './toastState'\nimport {ToastContextValue, ToastParams} from './types'\n\ntype ToastState = {\n  dismiss: () => void\n  id: string\n  updatedAt: number\n  params: ToastParams\n}[]\n\n/**\n * @public\n */\nexport interface ToastProviderProps extends Omit<ToastLayerProps, 'children'> {\n  children?: React.ReactNode\n  zOffset?: number | number[]\n}\n\n/**\n * @public\n */\nexport function ToastProvider(props: ToastProviderProps): React.JSX.Element {\n  const {children, padding, paddingX, paddingY, gap, zOffset = 1} = props\n  const [state, setState] = useState<ToastState>([])\n  const mounted = useMounted()\n\n  const value: ToastContextValue = useMemo(() => {\n    const push = (params: ToastParams) => {\n      const id = params.id || generateToastId()\n      const duration = params.duration || 5000\n\n      startTransition(() => {\n        setState((prevState): ToastState => {\n          /**\n           * Backwards compatibility for `sanity` patterns workaround a lack of programatically dismissible toasts.\n           * It uses a super short duration that closes the toast immediately in previous versions of `@sanity/ui`.\n           * We interpret this as a request to dismiss the toast immediately, and remove it from the state right away.\n           * Even once we support programatic dismissal we'll need to keep this for backwards compatibility with v2 and v1.\n           */\n          if (duration === 0.01) {\n            return prevState.filter((toast) => toast.id !== id)\n          }\n\n          /**\n           * Creates a function to dismiss this specific toast.\n           * This function will be passed to the Toast component\n           * and called either on close button click or after duration.\n           */\n          const dismiss = () =>\n            startTransition(() =>\n              setState((currentState) => currentState.filter((toast) => toast.id !== id)),\n            )\n\n          /**\n           * Create updated state by:\n           * 1. Removing any existing toast with the same ID (prevents duplicates)\n           * 2. Adding the new toast with its dismiss handler\n           * 3. Updates the `updatedAt` timestamp, which resets progress bar count downs.\n           */\n          return [\n            ...prevState.filter((toast) => toast.id !== id),\n            {\n              dismiss,\n              id,\n              updatedAt: Date.now(),\n              params: {...params, duration},\n            },\n          ]\n        })\n      })\n\n      return id\n    }\n\n    return {version: 0.0, push}\n  }, [])\n\n  return (\n    <ToastContext.Provider value={value}>\n      {children}\n      {mounted && (\n        <LayerProvider zOffset={zOffset}>\n          <ToastLayer padding={padding} paddingX={paddingX} paddingY={paddingY} gap={gap}>\n            <AnimatePresence initial={false} mode=\"popLayout\">\n              {state.map(({dismiss, id, params, updatedAt}) => (\n                <Toast\n                  key={id}\n                  closable={params.closable}\n                  description={params.description}\n                  onClose={dismiss}\n                  status={params.status}\n                  title={params.title}\n                  duration={params.duration}\n                  updatedAt={updatedAt}\n                />\n              ))}\n            </AnimatePresence>\n          </ToastLayer>\n        </LayerProvider>\n      )}\n    </ToastContext.Provider>\n  )\n}\n\nToastProvider.displayName = 'ToastProvider'\n","import {useContext} from 'react'\n\nimport {isRecord} from '../../lib/isRecord'\nimport {ToastContext} from './toastContext'\nimport {ToastContextValue} from './types'\n\n/**\n * @public\n */\nexport function useToast(): ToastContextValue {\n  const value = useContext(ToastContext)\n\n  if (!value) {\n    throw new Error('useToast(): missing context value')\n  }\n\n  // NOTE: This check is for future-compatiblity\n  // - If the value is not an object, it’s not compatible with the current version\n  // - If the value is an object, but doesn’t have `version: 0.0`, it’s not compatible with the current version\n  if (!isRecord(value) || value.version !== 0.0) {\n    throw new Error('useToast(): the context value is not compatible')\n  }\n\n  return value\n}\n","import {TreeState} from './types'\n\nexport function _findPrevItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(0, idx)\n  const len = els.length\n\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _findNextItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(idx)\n  const len = itemElements.length\n\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i]) {\n      continue\n    }\n\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _focusItemElement(el: HTMLElement): void {\n  if (el.getAttribute('role') === 'treeitem') {\n    el.focus()\n  }\n\n  if (el.getAttribute('role') === 'none') {\n    const firstChild = el.firstChild\n\n    if (firstChild && firstChild instanceof HTMLElement) {\n      firstChild.focus()\n    }\n  }\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @internal\n */\nexport const TreeContext = createGlobalScopedContext<TreeContextValue | null>(\n  '@sanity/ui/context/tree',\n  null,\n)\n","import {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Stack} from '../../primitives'\nimport {_findNextItemElement, _findPrevItemElement, _focusItemElement} from './helpers'\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue, TreeState} from './types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TreeProps {\n  space?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Tree = memo(\n  forwardRef(function Tree(\n    props: TreeProps &\n      Omit<React.HTMLProps<HTMLDivElement>, 'align' | 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n    forwardedRef: React.ForwardedRef<HTMLDivElement>,\n  ): React.JSX.Element {\n    const {children, space = 1, onFocus, ...restProps} = props\n    const ref = useRef<HTMLDivElement | null>(null)\n    const [focusedElement, setFocusedElement] = useState<HTMLElement | null>(null)\n    const focusedElementRef = useRef(focusedElement)\n    const path: string[] = useMemo(() => [], [])\n    const [itemElements, setItemElements] = useState<HTMLElement[]>([])\n    const [state, setState] = useState<TreeState>({})\n    const stateRef = useRef(state)\n\n    useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    useEffect(() => {\n      focusedElementRef.current = focusedElement\n    }, [focusedElement])\n\n    useEffect(() => {\n      stateRef.current = state\n    }, [state])\n\n    const registerItem = useCallback(\n      (element: HTMLElement, path: string, expanded: boolean, selected: boolean) => {\n        setState((s) => ({...s, [path]: {element, expanded}}))\n\n        if (selected) {\n          setFocusedElement(element)\n        }\n\n        return () => {\n          setState((s) => {\n            const newState = {...s}\n\n            delete newState[path]\n\n            return newState\n          })\n        }\n      },\n      [],\n    )\n\n    const setExpanded = useCallback((path: string, expanded: boolean) => {\n      setState((s) => {\n        const itemState = s[path]\n\n        if (!itemState) return s\n\n        return {...s, [path]: {...itemState, expanded}}\n      })\n    }, [])\n\n    const contextValue: TreeContextValue = useMemo(\n      () => ({\n        version: 0.0,\n        focusedElement: focusedElement || itemElements[0] || null,\n        level: 0,\n        path,\n        registerItem,\n        setExpanded,\n        setFocusedElement,\n        space,\n        state,\n      }),\n      [focusedElement, itemElements, path, registerItem, setExpanded, space, state],\n    )\n\n    const handleKeyDown = useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (!focusedElementRef.current) return\n\n        if (event.key === 'ArrowDown') {\n          event.preventDefault()\n\n          const nextEl = _findNextItemElement(\n            stateRef.current,\n            itemElements,\n            focusedElementRef.current,\n          )\n\n          if (nextEl) {\n            _focusItemElement(nextEl)\n            setFocusedElement(nextEl)\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowUp') {\n          event.preventDefault()\n\n          const prevEl = _findPrevItemElement(\n            stateRef.current,\n            itemElements,\n            focusedElementRef.current,\n          )\n\n          if (prevEl) {\n            _focusItemElement(prevEl)\n            setFocusedElement(prevEl)\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowLeft') {\n          event.preventDefault()\n\n          const itemKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n          if (!itemKey) return\n\n          const itemState = stateRef.current[itemKey]\n\n          if (!itemState) return\n\n          if (itemState.expanded) {\n            setState((s) => {\n              const itemState = s[itemKey]\n\n              if (!itemState) return s\n\n              return {...s, [itemKey]: {...itemState, expanded: false}}\n            })\n          } else {\n            const itemPath = itemKey.split('/')\n\n            itemPath.pop()\n\n            const parentKey = itemPath.join('/')\n            const parentState = parentKey && stateRef.current[parentKey]\n\n            if (parentState) {\n              parentState.element.focus()\n              setFocusedElement(parentState.element)\n            }\n          }\n\n          return\n        }\n\n        if (event.key === 'ArrowRight') {\n          event.preventDefault()\n\n          const focusedKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n          if (!focusedKey) return\n\n          if (!stateRef.current[focusedKey]?.expanded) {\n            setState((s) => {\n              const itemState = s[focusedKey]\n\n              if (!itemState) return s\n\n              return {...s, [focusedKey]: {...itemState, expanded: true}}\n            })\n          }\n\n          return\n        }\n      },\n      [itemElements],\n    )\n\n    const handleFocus = useCallback(\n      (event: React.FocusEvent<HTMLDivElement>) => {\n        setFocusedElement(event.target)\n\n        // Call the element's `focus` handler\n        onFocus?.(event)\n      },\n      [onFocus],\n    )\n\n    useEffect(() => {\n      if (!ref.current) return\n      const _itemElements = Array.from(\n        ref.current.querySelectorAll('[data-ui=\"TreeItem\"]'),\n      ) as HTMLElement[]\n\n      setItemElements(_itemElements)\n    }, [children])\n\n    return (\n      <TreeContext.Provider value={contextValue}>\n        <Stack\n          as=\"ul\"\n          data-ui=\"Tree\"\n          {...restProps}\n          onFocus={handleFocus}\n          onKeyDown={handleKeyDown}\n          ref={ref}\n          role=\"tree\"\n          space={space}\n        >\n          {children}\n        </Stack>\n      </TreeContext.Provider>\n    )\n  }),\n)\nTree.displayName = 'Memo(ForwardRef(Tree))'\n","import {getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {rem, ThemeProps} from '../../styles'\nimport {_cardColorStyle} from '../../styles/card'\n\nexport function treeItemRootStyle(): ReturnType<typeof css> {\n  return css`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      background-color: var(--card-bg-color);\n      color: var(--treeitem-fg-color);\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `\n}\n\nexport function treeItemRootColorStyle(props: ThemeProps): ReturnType<typeof css> {\n  const $tone = 'default'\n  const {color} = getTheme_v2(props.theme)\n  const tone = color.selectable[$tone]\n\n  return css`\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n  `\n}\n\nexport interface TreeItemBoxStyleProps {\n  $level: number\n}\n\nexport function treeItemBoxStyle(\n  props: TreeItemBoxStyleProps & ThemeProps,\n): ReturnType<typeof css> {\n  const {$level} = props\n  const {space} = getTheme_v2(props.theme)\n\n  return css`\n    padding-left: ${rem(space[2] * $level)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `\n}\n","import {useContext} from 'react'\n\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @beta\n */\nexport function useTree(): TreeContextValue {\n  const tree = useContext(TreeContext)\n\n  if (!tree) {\n    throw new Error('Tree: missing context value')\n  }\n\n  return tree\n}\n","import {memo} from 'react'\n\nimport {Stack} from '../../primitives'\nimport {useTree} from './useTree'\n\nexport interface TreeGroupProps {\n  expanded?: boolean\n}\n\nexport const TreeGroup = memo(function TreeGroup(\n  props: TreeGroupProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n): React.JSX.Element {\n  const {children, expanded = false, ...restProps} = props\n  const tree = useTree()\n\n  return (\n    <Stack\n      as=\"ul\"\n      data-ui=\"TreeGroup\"\n      {...restProps}\n      hidden={!expanded}\n      marginTop={tree.space}\n      role=\"group\"\n      space={tree.space}\n    >\n      {children}\n    </Stack>\n  )\n})\n","import {ToggleArrowRightIcon} from '@sanity/icons'\nimport {ThemeFontWeightKey} from '@sanity/ui/theme'\nimport {memo, useCallback, useEffect, useId, useMemo, useRef, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Box, BoxProps, Flex, Text} from '../../primitives'\nimport {\n  treeItemBoxStyle,\n  TreeItemBoxStyleProps,\n  treeItemRootColorStyle,\n  treeItemRootStyle,\n} from './style'\nimport {TreeContext} from './treeContext'\nimport {TreeGroup} from './treeGroup'\nimport {useTree} from './useTree'\n\n/**\n * @beta\n */\nexport interface TreeItemProps {\n  expanded?: boolean\n  fontSize?: number | number[]\n  icon?: React.ElementType\n  /**\n   * Allows passing a custom element type to the link component\n   */\n  linkAs?: BoxProps['as']\n  padding?: number | number[]\n  space?: number | number[]\n  text?: React.ReactNode\n  weight?: ThemeFontWeightKey\n}\n\nconst StyledTreeItem = memo(styled.li(treeItemRootStyle, treeItemRootColorStyle))\n\nconst TreeItemBox = styled(Box).attrs({forwardedAs: 'a'})<TreeItemBoxStyleProps>(treeItemBoxStyle)\n\nconst ToggleArrowText = styled(Text)`\n  & > svg {\n    transition: transform 100ms;\n  }\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const TreeItem = memo(function TreeItem(\n  props: TreeItemProps & Omit<React.HTMLProps<HTMLLIElement>, 'as' | 'ref' | 'role'>,\n): React.JSX.Element {\n  const {\n    children,\n    expanded: expandedProp = false,\n    fontSize = 1,\n    href,\n    icon: IconComponent,\n    id: idProp,\n    linkAs,\n    muted,\n    onClick,\n    padding = 2,\n    selected = false,\n    space = 2,\n    text,\n    weight,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLLIElement | null>(null)\n  const treeitemRef = useRef<HTMLDivElement | null>(null)\n  const tree = useTree()\n  const {path, registerItem, setExpanded, setFocusedElement} = tree\n  const _id = useId()\n  const id = idProp || _id\n  const [itemPath, itemKey] = useMemo(() => {\n    const itemPath = path.concat([id || ''])\n    return [itemPath, itemPath.join('/')]\n  }, [id, path])\n  const itemState = tree.state[itemKey]\n  const focused = tree.focusedElement === rootElement\n  const expanded = itemState?.expanded === undefined ? expandedProp : itemState?.expanded || false\n  const tabIndex = tree.focusedElement && tree.focusedElement === rootElement ? 0 : -1\n  const contextValue = useMemo(\n    () => ({...tree, level: tree.level + 1, path: itemPath}),\n    [itemPath, tree],\n  )\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLLIElement>) => {\n      if (onClick) onClick(event)\n\n      const target = event.target\n\n      if (\n        target instanceof HTMLElement &&\n        (target.getAttribute('data-ui') === 'TreeItem' ||\n          target.closest('[data-ui=\"TreeItem__box\"]'))\n      ) {\n        event.stopPropagation()\n        setExpanded(itemKey, !expanded)\n        setFocusedElement(rootElement)\n      }\n    },\n    [expanded, itemKey, onClick, rootElement, setExpanded, setFocusedElement],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      if (focused && event.key === 'Enter') {\n        const el = treeitemRef.current || rootElement\n\n        el?.click()\n      }\n    },\n    [focused, rootElement],\n  )\n\n  useEffect(() => {\n    if (!rootElement) return\n\n    return registerItem(rootElement, itemKey, expanded, selected)\n  }, [expanded, itemKey, registerItem, rootElement, selected])\n\n  const content = (\n    <Flex padding={padding}>\n      <Box\n        marginRight={space}\n        style={{\n          visibility: IconComponent || children ? 'visible' : 'hidden',\n          pointerEvents: 'none',\n        }}\n      >\n        {IconComponent && (\n          <Text muted={muted} size={fontSize} weight={weight}>\n            <IconComponent />\n          </Text>\n        )}\n        {!IconComponent && (\n          <ToggleArrowText muted={muted} size={fontSize} weight={weight}>\n            <ToggleArrowRightIcon style={{transform: expanded ? 'rotate(90deg)' : undefined}} />\n          </ToggleArrowText>\n        )}\n      </Box>\n      <Box flex={1}>\n        <Text muted={muted} size={fontSize} textOverflow=\"ellipsis\" weight={weight}>\n          {text}\n        </Text>\n      </Box>\n    </Flex>\n  )\n\n  if (href) {\n    return (\n      <StyledTreeItem\n        data-selected={selected ? '' : undefined}\n        data-tree-id={id}\n        data-tree-key={itemKey}\n        data-ui=\"TreeItem\"\n        {...restProps}\n        onClick={handleClick}\n        ref={setRootElement}\n        role=\"none\"\n      >\n        <TreeItemBox\n          $level={tree.level}\n          aria-expanded={expanded}\n          as={linkAs}\n          data-ui=\"TreeItem__box\"\n          href={href}\n          ref={treeitemRef}\n          role=\"treeitem\"\n          tabIndex={tabIndex}\n        >\n          {content}\n        </TreeItemBox>\n\n        <TreeContext.Provider value={contextValue}>\n          {children && <TreeGroup hidden={!expanded}>{children}</TreeGroup>}\n        </TreeContext.Provider>\n      </StyledTreeItem>\n    )\n  }\n\n  return (\n    <StyledTreeItem\n      data-selected={selected ? '' : undefined}\n      data-ui=\"TreeItem\"\n      data-tree-id={id}\n      data-tree-key={itemKey}\n      {...restProps}\n      aria-expanded={expanded}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={setRootElement}\n      role=\"treeitem\"\n      tabIndex={tabIndex}\n    >\n      <TreeItemBox $level={tree.level} as=\"div\" data-ui=\"TreeItem__box\">\n        {content}\n      </TreeItemBox>\n\n      <TreeContext.Provider value={contextValue}>\n        {children && <TreeGroup expanded={expanded}>{children}</TreeGroup>}\n      </TreeContext.Provider>\n    </StyledTreeItem>\n  )\n})\nTreeItem.displayName = 'Memo(TreeItem)'\n"],"names":["_raf","fn","frameId","requestAnimationFrame","cancelAnimationFrame","_raf2","innerDispose","outerDispose","_hasFocus","element","Boolean","document","activeElement","contains","isFocusable","tabIndex","getAttribute","isHTMLAnchorElement","href","rel","isHTMLInputElement","type","disabled","isHTMLButtonElement","isHTMLSelectElement","isHTMLTextAreaElement","attemptFocus","focus","focusFirstDescendant","i","childNodes","length","child","isHTMLElement","focusLastDescendant","_getElements","elementsArg","ret","el","Array","isArray","push","filter","useClickOutside","listener","t0","boundaryElement","$","_c","undefined","EMPTY_ARRAY","setElement","useState","t1","elements","setElements","elementsRef","useRef","t2","t3","prevElements","current","nextElements","includes","el_0","useEffect","t4","t5","handleWindowMouseDown","evt","target","Node","el_1","window","addEventListener","removeEventListener","useElementRect","useElementSize","_contentRect","useForwardedRef","ref","innerRef","Symbol","for","useImperativeHandle","ErrorBoundary","Component","state","error","getDerivedStateFromError","componentDidCatch","info","props","onCatch","render","message","children","StyledAutocomplete","styled","div","withConfig","displayName","componentId","ListBox","Box","rotate","keyframes","AnimatedSpinnerIcon","SpinnerIcon","AutocompleteOption","id","onSelect","selected","value","setTimeout","handleClick","event","key","_isEnterToClickElement","currentTarget","handleKeyDown","autocompleteReducer","msg","activeValue","focused","query","listFocused","AUTOCOMPLETE_LISTBOX_IGNORE_KEYS","AUTOCOMPLETE_POPOVER_PLACEMENT","AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS","DEFAULT_RENDER_VALUE","option","DEFAULT_FILTER_OPTION","toLowerCase","indexOf","InnerAutocomplete","forwardRef","forwardedRef","customValidity","filterOptionProp","icon","loading","onBlur","onChange","onFocus","onQueryChange","openButton","openOnFocus","optionsProp","prefix","readOnly","relatedElements","renderOptionProp","renderPopover","restProps","suffix","t6","valueProp","border","filterOption","fontSize","listBox","options","padding","popover","radius","renderOption","renderValue","EMPTY_RECORD","paddingProp","t7","t8","t9","dispatch","useReducer","t10","t11","value_0","rootElementRef","resultsPopoverElementRef","inputElementRef","listBoxElementRef","inputElement","setInputElement","listFocusedRef","valueRef","valuePropRef","popoverMouseWithinRef","t12","t13","t14","listBoxId","useArrayProp","t15","find","o","currentOption","t16","t17","filteredOptions","filteredOptionsLen","activeItemId","expanded","concat","focusInside","e","handleRootBlur","t18","event_0","listBoxElement","focusedElement","HTMLElement","listFocused_0","handleRootFocus","t19","v","handleOptionSelect","t20","event_1","preventDefault","activeOption","o_0","activeIndex","nextActiveOption","activeOption_0","o_1","activeIndex_0","nextActiveOption_0","listEl","handleRootKeyDown","t21","event_2","nextQuery","handleInputChange","t22","dispatchOpen","t23","event_3","handleInputFocus","t24","handlePopoverMouseEnter","t25","handlePopoverMouseLeave","t26","handleClearButtonClick","t27","handleClearButtonFocus","t28","t29","t30","t31","t32","t33","listElement","activeOption_1","o_2","activeIndex_1","activeItemElement","t34","bb0","t35","clearButton","map","_temp","openButtonBoxPadding","t36","_temp2","openButtonPadding","openButtonProps","t37","event_4","onClick","handleOpenClick","t38","ChevronDownIcon","openButtonNode","t39","bb1","t40","inputValue","event_5","handleListBoxKeyDown","t41","bb2","t42","t43","option_0","active","cloneElement","t44","content","bb3","results","t45","t46","RenderPopover","hidden","onMouseEnter","onMouseLeave","Autocomplete","v_0","v_1","Math","max","StyledBreadcrumbs","ol","ExpandButton","Button","Breadcrumbs","maxLength","separator","space","spaceRaw","open","setOpen","expandElementRef","popoverElementRef","collapse","useCallback","expand","useClickOutsideEvent","rawItems","useMemo","Children","toArray","isValidElement","items","len","beforeLength","ceil","afterLength","floor","slice","item","itemIndex","dialogStyle","theme","color","getTheme_v2","display","backdrop","responsiveDialogPositionStyle","media","_responsive","$position","position","animationDialogStyle","$animate","css","DialogContext","createGlobalScopedContext","version","useDialog","useContext","isTargetWithinScope","portalElement","containsOrEqualsElement","StyledDialog","Layer","responsivePaddingStyle","DialogContainer","Container","DialogCardRoot","Card","DialogLayout","Flex","DialogHeader","DialogContent","DialogFooter","DialogCard","__unstable_autoFocus","autoFocus","__unstable_hideCloseButton","hideCloseButton","contentRef","forwardedContentRef","footer","header","onClickOutside","onClose","portal","portalProp","radiusProp","scheme","shadow","shadowProp","width","widthProp","usePortal","useBoundaryElement","layer","useLayer","isTopLayer","labelId","showCloseButton","showHeader","stopPropagation","useGlobalKeyDown","target_0","CloseIcon","Dialog","dialog","useTheme_v2","_positionProp","_zOffsetProp","onActivate","cardRadius","cardShadow","zOffset","animate","cardRadiusProp","_animate","positionProp","zOffsetProp","usePrefersReducedMotion","preDivRef","postDivRef","cardRef","focusedElementRef","cardElement","handleFocus","rootClickTimeoutRef","clearTimeout","body","cardElement_0","handleRootClick","DialogProvider","contextValue","MenuButton","__unstable_disableRestoreFocusOnClose","deprecated_boundaryElement","button","buttonProp","menu","menuProp","onOpen","placement","deprecated_placement","popoverScheme","deprecated_popoverScheme","popoverRadius","deprecated_popoverRadius","preventOverflow","deprecated_preventOverflow","disableRestoreFocusOnClose","deprecated_portal","shouldFocus","setShouldFocus","buttonElement","setButtonElement","menuElements","setChildMenuElements","openRef","handleButtonClick","handleMouseDown","handleButtonKeyDown","handleMenuClickOutside","handleMenuEscape","relatedTarget","handleBlur","handleItemClick","els","els_0","_el","registerElement","overflow","popoverProps","keyframe","animation","skeletonStyle","$visible","$animated","StyledSkeleton","responsiveRadiusStyle","Skeleton","delay","animated","visible","setVisible","timeout","$size","$style","font","fontStyle","sizeIndex","sizes","height","lineHeight","ascenderHeight","descenderHeight","TextSkeleton","size","LabelSkeleton","HeadingSkeleton","CodeSkeleton","TabPanel","flex","LOADING_BAR_HEIGHT","STATUS_CARD_TONE","warning","success","BUTTON_TONE","TextBox","StyledToast","LoadingBar","LoadingBarMask","LoadingBarProgress","default","tone","enabled","bg","ROLES","LONG_ENOUGH_BUT_NOT_TOO_LONG","Toast","closable","description","duration","status","title","updatedAt","cardTone","buttonTone","role","visualDuration","bounce","transition","hasDuration","isFinite","initial","exit","verticalAlign","scaleX","ease","container","y","scale","zIndex","opacity","when","staggerChildren","slideIn","slideOut","willChange","MotionToast","motion","create","MotionFlex","MotionText","Text","MotionLoadingBar","MotionLoadingBarProgress","useMounted","useSyncExternalStore","subscribe","ToastContext","ToastLayer","paddingX","paddingY","gap","StyledLayer","Grid","toastId","generateToastId","String","ToastProvider","setState","mounted","params","startTransition","prevState","toast","dismiss","currentState","toast_0","toast_1","Date","now","dismiss_0","id_0","params_0","useToast","Error","isRecord","_findPrevItemElement","itemElements","idx","itemKey","segments","split","pop","p","j","k","join","_findNextItemElement","_focusItemElement","firstChild","TreeContext","Tree","memo","setFocusedElement","path","setItemElements","stateRef","path_0","s","s_0","newState","registerItem","path_1","expanded_0","s_1","itemState","setExpanded","level","nextEl","prevEl","itemState_0","s_2","itemState_1","itemPath","parentKey","parentState","focusedKey","s_3","itemState_2","_itemElements","from","querySelectorAll","treeItemRootStyle","treeItemRootColorStyle","$tone","selectable","_cardColorStyle","pressed","hovered","treeItemBoxStyle","$level","rem","useTree","tree","TreeGroup","StyledTreeItem","li","TreeItemBox","attrs","forwardedAs","ToggleArrowText","TreeItem","IconComponent","idProp","linkAs","muted","text","weight","expandedProp","rootElement","setRootElement","treeitemRef","_id","useId","itemPath_0","closest","click","visibility","pointerEvents","transform"],"mappings":"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"}